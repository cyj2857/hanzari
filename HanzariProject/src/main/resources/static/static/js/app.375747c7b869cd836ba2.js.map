{"version":3,"sources":["webpack:///src/components/MappingEmployee.vue","webpack:///./src/components/MappingEmployee.vue?828b","webpack:///./src/components/MappingEmployee.vue","webpack:///src/components/ManageSeats.vue","webpack:///./src/components/ManageSeats.vue?482b","webpack:///./src/components/ManageSeats.vue","webpack:///src/components/ManageFloors.vue","webpack:///./src/components/ManageFloors.vue?919e","webpack:///src/components/ManageSearch.vue","webpack:///./src/components/ManageSearch.vue?3f77","webpack:///src/components/Tabs.vue","webpack:///./src/components/ManageFloors.vue","webpack:///./src/components/ManageSearch.vue","webpack:///./src/components/Tabs.vue?f4fc","webpack:///src/components/AssignSeats.vue","webpack:///./src/components/AssignSeats.vue?746f","webpack:///./src/components/AssignSeats.vue","webpack:///src/views/Hanzari.vue","webpack:///./src/components/Tabs.vue","webpack:///./src/views/Hanzari.vue?7f19","webpack:///./src/views/Hanzari.vue","webpack:///src/App.vue","webpack:///./src/App.vue?9f44","webpack:///./src/App.vue","webpack:///./src/views/Login.vue?bc1e","webpack:///./src/views/Login.vue","webpack:///./src/router/index.js","webpack:///./src/main.js"],"names":["MappingEmployee","name","props","data","employeeList","this","copyFromManageSeatsEmployeeList","search","headers","text","align","sortable","value","allEmployeeSeatMap","created","_this","eventBus","$on","eachEmployeeSeatMap","beforeDestroy","$off","methods","clickEmployeeToMapping","clickedEmployee","$emit","changeBackPage","components_MappingEmployee","render","_vm","_h","$createElement","_c","_self","attrs","flat","color","staticStyle","float","large","on","click","_v","append-icon","label","single-line","hide-details","model","callback","$$v","expression","staticClass","items","height","no-data-text","footer-props","items-per-page-text","items-per-page-options","scopedSlots","_u","key","fn","row","_s","item","department","number","id","$event","pageStart","pageStop","itemsLength","staticRenderFns","src_components_MappingEmployee","__webpack_require__","normalizeComponent","ManageSeats","components","employee","copyFromTabsEmployeeList","mappingEmployeeComponentStatus","floorItems","selectedFloorItemsId","addVacantSwitchStatus","allFloorList","copyFromTabsFloorList","currentSelectedFloorObject","length","i","floorId","push","initFloorItems","floorObject","changeFloorSeat","alert","getMappingEmployeeComponent","changeAddVacantSwitchStatus","clickChangeSeatToVacant","components_ManageSeats","_e","cols","sm","inset","change","item-value","item-text","chips","outlined","dense","src_components_ManageSeats","ManageSeats_normalizeComponent","ManageFloors","managerFloorList","clickFloorIndexes","allImageMap","currentFloorImageName","allSeatMap","toolTipText","slice","map_default","a","copyFromTabsLatestFloorImage","imgUrl","url","set","copyFromTabsOtherFloorsImageList","_i","_imgUrl","_floorId","_i2","clickFloor","showToolTip","get","eachFloorSeatList","currentFloorSeatsLength","currentFloorVacantSeatsLength","employeeDepartmentMap","employeeId","employeeDepartment","keys","from_default","_i3","floorName","createFloorUUID","replace","c","r","Math","random","toString","addFloor","newFloorObject","buildingId","floorOrder","create","modify","delete","editFloorName","_this2","idx","findIndex","removeFloor","currentFloorId","splice","nextIdx","console","log","typeof_default","changeImageFile","e","files","target","dataTransfer","saveImageFile","file","components_ManageFloors","small","medium","dark","overflow-y","_l","bottom","ref","_g","style","border","includes","mouseover","domProps","innerHTML","solo","keyup","$set","directives","rawName","type","$refs","Upload","ManageSearch","allEmployeeSeat","getAllEmployeeSeats","mounted","seats","j","newSeatObject","seatId","employeeName","employeeNumber","showSeatButtonClicked","clickedSeat","components_ManageSearch","Tabs","ManageFloors_normalizeComponent","ManageSearch_normalizeComponent","tab","copyEmployeeList","floors","copyFloorList","latestFloorImage","copyLatestFloorImage","otherFloorsImageList","copyOtherFloorsImageList","icon","title","index","content","components_Tabs","background-color","horizontal","grow","tag","AssignSeats","floorCanvas","zoom","fontSize","clipboard","currentSelectedFloorName","currentSelectedFloorId","latestFloorImageFromDb","otherFloorImageFromDb","latestFloorSeatListFromDb","copyLatestFloorSeatList","otherFloorSeatListFromDb","copyOtherFloorsSeatMap","managerAllSeatMap","contextMenuStatus","contextMenuXLocation","contextMenuYLocation","contextMenuItems","toolTipStatus","toolTipXLocation","toolTipYLocation","toolTipColor","seatNumber","firstMouseDownX","firstMouseDownY","changeFloor","backgroundImage","backgroundColor","getObjects","forEach","obj","remove","changedFloorName","switchStatus","employeeObject","mappingEmployeeToVacant","moveSeatToAnotherFloor","getActiveObject","changeSeatToVacant","loadImageFile","seatObject","showSeatHighlight","initializing","loadLatestFloor","canvas","fabric","Canvas","fireRightClick","fireMiddleClick","stopContextMenu","opt","viewportTransform","evt","deltaY","getZoom","ctrlKey","zoomToPoint","Point","offsetX","offsetY","setViewportTransform","checkZoom","preventDefault","stopPropagation","currentHeight","currentWidth","width","setCoords","getBoundingRect","top","left","max","min","left1","top1","scale1x","scale1y","width1","height1","brNew","scaleX","scaleY","event","button","pointer","getPointer","x","y","posX","clientX","posY","clientY","showContextMenuOfOneSeat","mouseUpX","mouseUpY","addVacantSeat","group","groupToObject","toObject","manageKeyboard","clickResetToRatioBtn","_this3","currentZoom","parseInt","_this4","discardActiveObject","eachfloorSeatList","getEachFloorSeatList","getManagerEachFloorSeatList","loadImageUrl","add","renderAll","_this5","reader","FileReader","onload","result","readAsDataURL","_this6","Image","fromURL","img","setBackgroundImage","bind","crossOrigin","floor","getEachEmployeeSeatList","deleteManagerEachFloorSeatList","managerEachFloorSeatList","deleteEachEmployeeSeatList","oneEmployeeSeatList","_this7","ctrlDown","document","addEventListener","window","keyCode","deleteBtn","copySelectedSeat","pasteSelectedSeat","createSeatUUID","getColor","mouseDownX","mouseDownY","rectangle","Rect","abs","fill","opacity","textObject","IText","Group","angle","seatNumberArray","seat","seatName","split","apply","seatNameText","seatNameObject","scaledObject","getScaledWidth","getScaledHeight","setActiveObject","_this8","mappedOtherEmployeeSeatNameList","getActiveObjects","confirm","join","eachEmployeeSeatList","clickdeleteAllBtn","_this9","_this10","indexOf","_this11","cloneSeat","_this12","clone","cloned","_this13","activeObject","managerEachFloorList","clonedObj","evented","forEachObject","requestRenderAll","_this14","$nextTick","clickContextMenu","_this15","_loop","changeFloorSeatList","changeManagerFloorSeatList","_j","_this16","seatFloor","_loop2","asObject","objectSeatId","animate","duration","onChange","onComplete","clickExportToCSVBtn","changeCSVFile","saveFromCSVFileToDB","csvFile","newFileForCSVType","File","csvFileData","FormData","append","clickSaveBtn","_floorData","floor_id","floor_name","building_id","floor_order","deleteFloorKey","floorData","imgData","_seatData","seat_id","seat_name","is_group","group_id","employee_id","degree","shape_id","deleteSeatKey","deleteSeatFloor","seatData","getEmployeeObject","employeeInfoList","_employee","_i4","makeGroupInfo","_i5","_group","loadOtherFloors","_i6","_group2","clickPrintBtn","printWin","open","windowContent","getElementById","toDataURL","write","components_AssignSeats","vertical","accept","text-align","position-x","position-y","absolute","offset-y","max-width","HOST","Hanzari","Tabs_normalizeComponent","AssignSeats_normalizeComponent","ssrContext","drawer","floorList","floorIdList","latestFloor","latestFloorSeatList","otherFloorsSeatMap","asyncToGenerator_default","regenerator_default","mark","_callee","wrap","_context","prev","next","getEmployeeList","sent","getFloorList","getLatestFloor","getLatestFloorImage","getLatestFloorSeatList","getOtherFloorImageList","getOtherFloorsSeatMap","stop","_callee2","allEmployeeList","response","newEmployeeObject","_context2","axios_default","employee_name","department_name","extension_number","seatIdList","seatList","t0","abrupt","_callee3","_context3","sort","b","_callee4","_context4","_callee5","latestFloorId","newImageObject","_context5","config","_callee6","responseList","_context6","error","_callee7","_context7","isGroup","shapeId","_callee8","_context8","saveFloors","tableName","saveData","saveTableName","post","stringify_default","Content-Type","saveImages","saveSeats","deleteFloorWtihKey","deleteTableName","deleteKey","deleteSeatWithKey","downloadCSVFile","_callee9","link","contentDisposition","filename","_contentDisposition$s","_contentDisposition$s2","fileNameMatch","_fileNameMatch$split","_fileNameMatch$split2","_context9","URL","createObjectURL","Blob","createElement","filter","str","slicedToArray_default","href","setAttribute","cssText","body","appendChild","then","catch","views_Hanzari","app","deleteFloorWithKey","src_views_Hanzari","Hanzari_normalizeComponent","App","selectortype_template_index_0_src_App","src_App","App_normalizeComponent","views_Login","position","primary-title","prepend-icon","primary","block","src_views_Login","Login_normalizeComponent","Vue","use","Router","router","mode","routes","path","component","Login","d","__webpack_exports__","prototype","$axios","axios","Vuetify","iconfont","vSelectMenu","el","template","vuetify"],"mappings":"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","file":"static/js/app.375747c7b869cd836ba2.js","sourcesContent":["<template>\r\n  <v-card flat color=\"transparent\">\r\n    <v-icon large style=\"float: right\" @click=\"changeBackPage\">clear</v-icon>\r\n    <v-card-title>\r\n      <v-text-field\r\n        v-model=\"search\"\r\n        append-icon=\"mdi-magnify\"\r\n        label=\"이름/부서/내선번호 중 입력하세요. 예) 마효리, 부서1, 111-0001\"\r\n        single-line\r\n        hide-details\r\n      ></v-text-field>\r\n    </v-card-title>\r\n    <v-data-table\r\n      :headers=\"headers\"\r\n      :items=\"this.employeeList\"\r\n      :search=\"search\"\r\n      height=\"400px\"\r\n      class=\"elevation-1\"\r\n      no-data-text=\"데이터가 없습니다\"\r\n      :footer-props=\"{\r\n        'items-per-page-text': '페이지 당 사원수',\r\n        'items-per-page-options': [5, 10],\r\n      }\"\r\n\r\n    >\r\n      <template v-slot:item=\"row\">\r\n        <tr>\r\n          <td>{{ row.item.name }}</td>\r\n          <td>{{ row.item.department }}</td>\r\n          <td>{{ row.item.number }}</td>\r\n          <td>\r\n            <v-icon\r\n              large\r\n              id=\"mappingEmployeeToVacantButton\"\r\n              @click=\"clickEmployeeToMapping(row.item)\"\r\n              >add_box</v-icon\r\n            >\r\n          </td>\r\n        </tr>\r\n      </template>\r\n      <template v-slot:pageText=\"props\">\r\n        ITEMS {{ props.pageStart }} - {{ props.pageStop }} OF\r\n        {{ props.itemsLength }}\r\n      </template>\r\n    </v-data-table>\r\n  </v-card>\r\n</template>\r\n\r\n<script>\r\nimport { eventBus } from \"../main\";\r\nexport default {\r\n  name: \"MappingEmployee\",\r\n  props: [\"copyFromManageSeatsEmployeeList\"],\r\n  data() {\r\n    return {\r\n      employeeList: this.copyFromManageSeatsEmployeeList,\r\n      search: \"\",\r\n      headers: [\r\n        { text: \"이름\", align: \"start\", sortable: true, value: \"name\" },\r\n        { text: \"부서\", value: \"department\" },\r\n        { text: \"내선번호\", value: \"number\" },\r\n        { text: \"\", value: \"mappingEmployeeToVacantButton\" },\r\n      ],\r\n      allEmployeeSeatMap: null,\r\n    };\r\n  },\r\n  created() {\r\n    eventBus.$on(\"pushEachEmployeeSeatMap\", (eachEmployeeSeatMap) => {\r\n      this.allEmployeeSeatMap = eachEmployeeSeatMap;\r\n    });\r\n  },\r\n  beforeDestroy() {\r\n    eventBus.$off(\"pushEachEmployeeSeatMap\");\r\n  },\r\n  methods: {\r\n    clickEmployeeToMapping(clickedEmployee) {\r\n      eventBus.$emit(\"mappingEmployeeToVacant\", clickedEmployee);\r\n    },\r\n    changeBackPage() {\r\n      eventBus.$emit(\"pushMappingEmployeeComponentStatus\", false);\r\n    },\r\n  },\r\n};\r\n</script>\n\n\n// WEBPACK FOOTER //\n// src/components/MappingEmployee.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('v-card',{attrs:{\"flat\":\"\",\"color\":\"transparent\"}},[_c('v-icon',{staticStyle:{\"float\":\"right\"},attrs:{\"large\":\"\"},on:{\"click\":_vm.changeBackPage}},[_vm._v(\"clear\")]),_vm._v(\" \"),_c('v-card-title',[_c('v-text-field',{attrs:{\"append-icon\":\"mdi-magnify\",\"label\":\"이름/부서/내선번호 중 입력하세요. 예) 마효리, 부서1, 111-0001\",\"single-line\":\"\",\"hide-details\":\"\"},model:{value:(_vm.search),callback:function ($$v) {_vm.search=$$v},expression:\"search\"}})],1),_vm._v(\" \"),_c('v-data-table',{staticClass:\"elevation-1\",attrs:{\"headers\":_vm.headers,\"items\":this.employeeList,\"search\":_vm.search,\"height\":\"400px\",\"no-data-text\":\"데이터가 없습니다\",\"footer-props\":{\n      'items-per-page-text': '페이지 당 사원수',\n      'items-per-page-options': [5, 10],\n    }},scopedSlots:_vm._u([{key:\"item\",fn:function(row){return [_c('tr',[_c('td',[_vm._v(_vm._s(row.item.name))]),_vm._v(\" \"),_c('td',[_vm._v(_vm._s(row.item.department))]),_vm._v(\" \"),_c('td',[_vm._v(_vm._s(row.item.number))]),_vm._v(\" \"),_c('td',[_c('v-icon',{attrs:{\"large\":\"\",\"id\":\"mappingEmployeeToVacantButton\"},on:{\"click\":function($event){return _vm.clickEmployeeToMapping(row.item)}}},[_vm._v(\"add_box\")])],1)])]}},{key:\"pageText\",fn:function(props){return [_vm._v(\"\\n      ITEMS \"+_vm._s(props.pageStart)+\" - \"+_vm._s(props.pageStop)+\" OF\\n      \"+_vm._s(props.itemsLength)+\"\\n    \")]}}])})],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-789dfb32\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/MappingEmployee.vue\n// module id = null\n// module chunks = ","var normalizeComponent = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./MappingEmployee.vue\"\nimport __vue_script__ from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./MappingEmployee.vue\"\n/* template */\nimport __vue_template__ from \"!!../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-789dfb32\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../node_modules/vue-loader/lib/selector?type=template&index=0!./MappingEmployee.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = null\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/MappingEmployee.vue\n// module id = null\n// module chunks = ","<template>\r\n  <div>\r\n    <v-card flat color=\"transparent\" v-if=\"!mappingEmployeeComponentStatus\">\r\n      <v-row>\r\n        <v-col cols=\"12\" sm=\"9\">\r\n          <v-card-title\r\n            ><v-icon large>event_seat</v-icon>\r\n            <h3>좌석 만들기</h3></v-card-title\r\n          ></v-col\r\n        >\r\n        <v-col cols=\"12\" sm=\"3\">\r\n          <v-switch\r\n            v-model=\"addVacantSwitchStatus\"\r\n            inset\r\n            @change=\"changeAddVacantSwitchStatus\"\r\n          ></v-switch\r\n        ></v-col>\r\n      </v-row>\r\n\r\n      <v-row>\r\n        <v-col cols=\"10\" sm=\"6\">\r\n          <v-card-text>\r\n            <v-btn color=\"blue lighten-3\" @click=\"getMappingEmployeeComponent\"\r\n              ><h4><v-icon large>perm_identity</v-icon>사원 매핑하기</h4></v-btn\r\n            ></v-card-text\r\n          >\r\n        </v-col>\r\n        <v-col cols=\"10\" sm=\"4\">\r\n          <v-card-text>\r\n            <v-btn color=\"pink lighten-3\" @click=\"clickChangeSeatToVacant\"\r\n              ><h4>\r\n                <v-icon large>person_add_disabled</v-icon>자리 비우기\r\n              </h4></v-btn\r\n            ></v-card-text\r\n          >\r\n        </v-col>\r\n      </v-row>\r\n      <v-divider class=\"mx-4\"></v-divider>\r\n\r\n      <v-card-title\r\n        ><v-icon large>stairs</v-icon>\r\n        <h3>층간 이동하기</h3></v-card-title\r\n      >\r\n      <v-row>\r\n        <v-col cols=\"9\">\r\n          <v-select\r\n            :items=\"floorItems\"\r\n            item-value=\"floorId\"\r\n            item-text=\"floorName\"\r\n            v-model=\"selectedFloorItemsId\"\r\n            chips\r\n            label=\"층을 선택하세요\"\r\n            single-line\r\n            outlined\r\n            dense\r\n            no-data-text=\"이동할 층이 없습니다.\"\r\n          ></v-select>\r\n        </v-col>\r\n        <v-col cols=\"12\" sm=\"3\">\r\n          <v-icon large @click=\"changeFloorSeat\">edit</v-icon></v-col\r\n        >\r\n      </v-row>\r\n    </v-card>\r\n\r\n    <MappingEmployee\r\n      :copyFromManageSeatsEmployeeList=\"employee\"\r\n      v-if=\"mappingEmployeeComponentStatus && employee\"\r\n    />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport MappingEmployee from \"@/components/MappingEmployee.vue\";\r\nimport { eventBus } from \"../main\";\r\nexport default {\r\n  name: \"ManageSeats\",\r\n  props: [\"copyFromTabsEmployeeList\", \"copyFromTabsFloorList\"],\r\n  components: {\r\n    MappingEmployee,\r\n  },\r\n  data() {\r\n    return {\r\n      employee: this.copyFromTabsEmployeeList,\r\n      mappingEmployeeComponentStatus: false,\r\n\r\n      floorItems: [],\r\n      selectedFloorItemsId: null,\r\n\r\n      addVacantSwitchStatus: false,\r\n\r\n      allFloorList: this.copyFromTabsFloorList,\r\n      currentSelectedFloorObject: null,\r\n    };\r\n  },\r\n  created() {\r\n    if (this.copyFromTabsFloorList && this.copyFromTabsFloorList.length) {\r\n      this.currentSelectedFloorObject = this.allFloorList[\r\n        this.allFloorList.length - 1\r\n      ];\r\n\r\n      for (let i = 0; i < this.copyFromTabsFloorList.length; i++) {\r\n        //console.log(typeof this.currentSelectedFloor.floorId);//String\r\n        //console.log(typeof this.copyFromTabsFloorList[i].floorId); //String\r\n        if (\r\n          this.currentSelectedFloorObject.floorId ===\r\n          this.copyFromTabsFloorList[i].floorId\r\n\r\n        ) {\r\n          continue;\r\n        }\r\n\r\n        this.floorItems.push(this.copyFromTabsFloorList[i]);\r\n      }\r\n    }\r\n\r\n    eventBus.$on(\"allFloorList\", (allFloorList) => {\r\n      this.allFloorList = allFloorList;\r\n      this.initFloorItems();\r\n    });\r\n\r\n    eventBus.$on(\"pushSelectedFloorObject\", (floorObject) => {\r\n      this.currentSelectedFloorObject = floorObject;\r\n      this.initFloorItems();\r\n    });\r\n\r\n    eventBus.$on(\r\n      \"pushMappingEmployeeComponentStatus\",\r\n      (mappingEmployeeComponentStatus) => {\r\n        this.mappingEmployeeComponentStatus = mappingEmployeeComponentStatus;\r\n      }\r\n    );\r\n  },\r\n  beforeDestroy() {\r\n    eventBus.$off(\"allFloorList\");\r\n    eventBus.$off(\"pushSelectedFloorObject\");\r\n    eventBus.$off(\"pushMappingEmployeeComponentStatus\");\r\n  },\r\n  methods: {\r\n    initFloorItems() {\r\n      this.floorItems = [];\r\n      for (let i = 0; i < this.allFloorList.length; i++) {\r\n\r\n        //console.log(typeof this.currentSelectedFloorObject.floorId); //String\r\n        //console.log(typeof this.allFloorList[i].floorId);//String\r\n \r\n        if (this.currentSelectedFloorObject.floorId === this.allFloorList[i].floorId) {\r\n\r\n          continue;\r\n        }\r\n\r\n        this.floorItems.push(this.allFloorList[i]);\r\n      }\r\n    },\r\n    changeFloorSeat() {\r\n      if (this.selectedFloorItemsId) {\r\n        eventBus.$emit(\"moveSeatToAnotherFloor\", this.selectedFloorItemsId);\r\n      } else {\r\n        alert(\"이동할 층을 선택하지 않았습니다.\");\r\n      }\r\n    },\r\n    getMappingEmployeeComponent() {\r\n      this.mappingEmployeeComponentStatus = true;\r\n    },\r\n    changeAddVacantSwitchStatus() {\r\n      eventBus.$emit(\"pushAddVacantSwitchStatus\", this.addVacantSwitchStatus);\r\n    },\r\n    clickChangeSeatToVacant() {\r\n      eventBus.$emit(\"changeSeatToVacant\");\r\n    },\r\n  },\r\n};\r\n</script>\n\n\n// WEBPACK FOOTER //\n// src/components/ManageSeats.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[(!_vm.mappingEmployeeComponentStatus)?_c('v-card',{attrs:{\"flat\":\"\",\"color\":\"transparent\"}},[_c('v-row',[_c('v-col',{attrs:{\"cols\":\"12\",\"sm\":\"9\"}},[_c('v-card-title',[_c('v-icon',{attrs:{\"large\":\"\"}},[_vm._v(\"event_seat\")]),_vm._v(\" \"),_c('h3',[_vm._v(\"좌석 만들기\")])],1)],1),_vm._v(\" \"),_c('v-col',{attrs:{\"cols\":\"12\",\"sm\":\"3\"}},[_c('v-switch',{attrs:{\"inset\":\"\"},on:{\"change\":_vm.changeAddVacantSwitchStatus},model:{value:(_vm.addVacantSwitchStatus),callback:function ($$v) {_vm.addVacantSwitchStatus=$$v},expression:\"addVacantSwitchStatus\"}})],1)],1),_vm._v(\" \"),_c('v-row',[_c('v-col',{attrs:{\"cols\":\"10\",\"sm\":\"6\"}},[_c('v-card-text',[_c('v-btn',{attrs:{\"color\":\"blue lighten-3\"},on:{\"click\":_vm.getMappingEmployeeComponent}},[_c('h4',[_c('v-icon',{attrs:{\"large\":\"\"}},[_vm._v(\"perm_identity\")]),_vm._v(\"사원 매핑하기\")],1)])],1)],1),_vm._v(\" \"),_c('v-col',{attrs:{\"cols\":\"10\",\"sm\":\"4\"}},[_c('v-card-text',[_c('v-btn',{attrs:{\"color\":\"pink lighten-3\"},on:{\"click\":_vm.clickChangeSeatToVacant}},[_c('h4',[_c('v-icon',{attrs:{\"large\":\"\"}},[_vm._v(\"person_add_disabled\")]),_vm._v(\"자리 비우기\\n            \")],1)])],1)],1)],1),_vm._v(\" \"),_c('v-divider',{staticClass:\"mx-4\"}),_vm._v(\" \"),_c('v-card-title',[_c('v-icon',{attrs:{\"large\":\"\"}},[_vm._v(\"stairs\")]),_vm._v(\" \"),_c('h3',[_vm._v(\"층간 이동하기\")])],1),_vm._v(\" \"),_c('v-row',[_c('v-col',{attrs:{\"cols\":\"9\"}},[_c('v-select',{attrs:{\"items\":_vm.floorItems,\"item-value\":\"floorId\",\"item-text\":\"floorName\",\"chips\":\"\",\"label\":\"층을 선택하세요\",\"single-line\":\"\",\"outlined\":\"\",\"dense\":\"\",\"no-data-text\":\"이동할 층이 없습니다.\"},model:{value:(_vm.selectedFloorItemsId),callback:function ($$v) {_vm.selectedFloorItemsId=$$v},expression:\"selectedFloorItemsId\"}})],1),_vm._v(\" \"),_c('v-col',{attrs:{\"cols\":\"12\",\"sm\":\"3\"}},[_c('v-icon',{attrs:{\"large\":\"\"},on:{\"click\":_vm.changeFloorSeat}},[_vm._v(\"edit\")])],1)],1)],1):_vm._e(),_vm._v(\" \"),(_vm.mappingEmployeeComponentStatus && _vm.employee)?_c('MappingEmployee',{attrs:{\"copyFromManageSeatsEmployeeList\":_vm.employee}}):_vm._e()],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-19008f94\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/ManageSeats.vue\n// module id = null\n// module chunks = ","var normalizeComponent = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./ManageSeats.vue\"\nimport __vue_script__ from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./ManageSeats.vue\"\n/* template */\nimport __vue_template__ from \"!!../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-19008f94\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../node_modules/vue-loader/lib/selector?type=template&index=0!./ManageSeats.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = null\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/ManageSeats.vue\n// module id = null\n// module chunks = ","<template>\r\n  <div>\r\n    <v-card flat color=\"transparent\">\r\n      <v-row>\r\n        <v-col cols=\"12\" sm=\"8\">\r\n          <v-card-title\r\n            ><v-icon large>stairs</v-icon>\r\n            <h3>층 설정</h3></v-card-title\r\n          ></v-col\r\n        ><v-col cols=\"12\" sm=\"4\">\r\n          <v-btn small\r\n            ><v-icon medium dark @click=\"removeFloor\"\r\n              >remove_circle</v-icon\r\n            ></v-btn\r\n          >\r\n          <v-btn small\r\n            ><v-icon medium dark @click=\"addFloor\">add_circle</v-icon></v-btn\r\n          ></v-col\r\n        ></v-row\r\n      >\r\n      <v-row style=\"overflow-y: scroll; height: 180px\">\r\n        <v-col\r\n          v-for=\"floorObject of this.allFloorList\"\r\n          :key=\"floorObject.floorId\"\r\n          class=\"d-flex child-flex\"\r\n          cols=\"4\"\r\n          ><v-tooltip bottom\r\n            ><template v-slot:activator=\"{ on }\">\r\n              <v-btn\r\n                v-on=\"on\"\r\n                large\r\n                @click=\"clickFloor(floorObject)\"\r\n                @mouseover=\"showToolTip(floorObject)\"\r\n                :style=\"{\r\n                  border: clickFloorIndexes.includes(floorObject.floorId)\r\n                    ? 'thick solid black'\r\n                    : '',\r\n                }\"\r\n                ><h3>{{ floorObject.floorName }}</h3></v-btn\r\n              >\r\n            </template>\r\n            <span v-html=\"toolTipText\"> </span>\r\n          </v-tooltip>\r\n        </v-col>\r\n      </v-row>\r\n      <v-divider class=\"mx-4\"></v-divider>\r\n      <v-card-title\r\n        ><v-icon large>stairs</v-icon>\r\n        <h3>층 이름 편집</h3></v-card-title\r\n      >\r\n      <v-row v-if=\"currentSelectedFloorObject\">\r\n        <v-col cols=\"12\" sm=\"9\">\r\n          <v-text-field\r\n            v-model=\"currentSelectedFloorObject.floorName\"\r\n            @keyup=\"editFloorName\"\r\n            label=\"층 이름을 입력하세요\"\r\n            solo\r\n          ></v-text-field>\r\n        </v-col>\r\n        <v-col cols=\"12\" sm=\"3\">\r\n          <v-card-text><h2>층</h2></v-card-text>\r\n        </v-col>\r\n      </v-row>\r\n      <v-divider class=\"mx-4\"></v-divider>\r\n\r\n      <v-card-title\r\n        ><v-icon large>image</v-icon>\r\n        <h3>배경화면 설정</h3></v-card-title\r\n      >\r\n      <v-row>\r\n        <v-col cols=\"12\" sm=\"9\">\r\n          <v-card>\r\n            <v-card-text>{{ currentFloorImageName }}</v-card-text>\r\n          </v-card>\r\n        </v-col>\r\n        <v-col cols=\"12\" sm=\"3\">\r\n          <v-card-text>\r\n            <input\r\n              v-show=\"false\"\r\n              ref=\"Upload\"\r\n              type=\"file\"\r\n              @change=\"changeImageFile\"\r\n            />\r\n            <v-btn color=\"blue-grey lighten-2\" @click=\"$refs.Upload.click()\"\r\n              ><h4>업로드</h4></v-btn\r\n            >\r\n          </v-card-text>\r\n        </v-col>\r\n      </v-row>\r\n    </v-card>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { eventBus } from \"../main.js\";\r\nimport \"material-design-icons-iconfont/dist/material-design-icons.css\";\r\n\r\nexport default {\r\n  props: [\r\n    \"copyFromTabsFloorList\",\r\n    \"copyFromTabsLatestFloorImage\",\r\n    \"copyFromTabsOtherFloorsImageList\",\r\n  ],\r\n  data() {\r\n    return {\r\n      length: null,\r\n\r\n      allFloorList: [],\r\n      managerFloorList: [],\r\n\r\n      currentSelectedFloorObject: null,\r\n\r\n      clickFloorIndexes: null,\r\n\r\n      allImageMap: null,\r\n      currentFloorImageName: \"이미지를 업로드하세요\",\r\n\r\n      allSeatMap: null,\r\n      toolTipText: null,\r\n    };\r\n  },\r\n  created() {\r\n    if (this.copyFromTabsFloorList && this.copyFromTabsFloorList.length) {\r\n      this.currentSelectedFloorObject = this.copyFromTabsFloorList[\r\n        this.copyFromTabsFloorList.length - 1\r\n      ];\r\n      this.allFloorList = this.copyFromTabsFloorList;\r\n      this.managerFloorList = this.allFloorList.slice();\r\n      this.length = this.copyFromTabsFloorList.length;\r\n      this.clickFloorIndexes = this.currentSelectedFloorObject.floorId;\r\n    }\r\n\r\n    if (this.allImageMap == null) {\r\n      this.allImageMap = new Map();\r\n      if (this.copyFromTabsLatestFloorImage) {\r\n        for (let i = 0; i < this.copyFromTabsLatestFloorImage.length; i++) {\r\n          let imgUrl = this.copyFromTabsLatestFloorImage[i].url;\r\n          let floorId = this.copyFromTabsLatestFloorImage[i].floorId;\r\n          this.allImageMap.set(floorId, imgUrl);\r\n        }\r\n      }\r\n\r\n      if (this.copyFromTabsOtherFloorsImageList) {\r\n        for (let i = 0; i < this.copyFromTabsOtherFloorsImageList.length; i++) {\r\n          let imgUrl = this.copyFromTabsOtherFloorsImageList[i].url;\r\n          let floorId = this.copyFromTabsOtherFloorsImageList[i].floorId;\r\n          this.allImageMap.set(floorId, imgUrl);\r\n        }\r\n      }\r\n    }\r\n\r\n    eventBus.$on(\"pushAllSeatMap\", (allSeatMap) => {\r\n      this.allSeatMap = allSeatMap;\r\n    });\r\n\r\n    eventBus.$on(\"pushFloorOfSeat\", (floorId) => {\r\n      for (let i = 0; i < this.allFloorList.length; i++) {\r\n        //console.log(typeof floorId);//String\r\n        //console.log(typeof this.allFloorList[i].floorId); //String\r\n\r\n        if (floorId === this.allFloorList[i].floorId) {\r\n          this.clickFloor(this.allFloorList[i]);\r\n        }\r\n      }\r\n    });\r\n  },\r\n  beforeDestroy() {\r\n    eventBus.$off(\"pushAllSeatMap\");\r\n    eventBus.$off(\"pushFloorOfSeat\");\r\n  },\r\n  methods: {\r\n    showToolTip(floorObject) {\r\n      if (this.allSeatMap) {\r\n        if (this.allSeatMap.get(floorObject.floorId)) {\r\n          if (this.allSeatMap.get(floorObject.floorId).length) {\r\n            let eachFloorSeatList = this.allSeatMap.get(floorObject.floorId);\r\n            let department = [];\r\n\r\n            let currentFloorSeatsLength = eachFloorSeatList.length;\r\n            let currentFloorVacantSeatsLength = null;\r\n            let employeeDepartmentMap = new Map();\r\n\r\n            if (currentFloorSeatsLength) {\r\n              for (let i = 0; i < eachFloorSeatList.length; i++) {\r\n                if (eachFloorSeatList[i].employeeId == null) {\r\n                  currentFloorVacantSeatsLength++;\r\n                } else {\r\n                  if (\r\n                    !employeeDepartmentMap.get(\r\n                      eachFloorSeatList[i].employeeDepartment\r\n                    )\r\n                  ) {\r\n                    let employees = [];\r\n                    employeeDepartmentMap.set(\r\n                      eachFloorSeatList[i].employeeDepartment,\r\n                      employees\r\n                    );\r\n                  }\r\n\r\n                  employeeDepartmentMap\r\n                    .get(eachFloorSeatList[i].employeeDepartment)\r\n                    .push(eachFloorSeatList[i].employeeId);\r\n                }\r\n              }\r\n\r\n              let keys = [];\r\n              keys = Array.from(employeeDepartmentMap.keys());\r\n              let text = \"<br>\";\r\n              for (let i = 0; i < keys.length; i++) {\r\n                text +=\r\n                  keys[i] +\r\n                  \" : \" +\r\n                  employeeDepartmentMap.get(keys[i]).length +\r\n                  \"<br>\";\r\n              }\r\n\r\n              this.toolTipText =\r\n                floorObject.floorName +\r\n                \"층 <br>\" +\r\n                \"전체 좌석 : \" +\r\n                currentFloorSeatsLength +\r\n                \"<br> 공석 : \" +\r\n                currentFloorVacantSeatsLength +\r\n                text;\r\n            }\r\n          } else {\r\n            this.toolTipText =\r\n              floorObject.floorName + \"층 <br>\" + \"좌석이 없습니다.\";\r\n          }\r\n        } else {\r\n          this.toolTipText = floorObject.floorName + \"층 <br>\" + \"좌석이 없습니다.\";\r\n        }\r\n      } else {\r\n        this.toolTipText = floorObject.floorName + \"층 <br>\" + \"좌석이 없습니다.\";\r\n      }\r\n    },\r\n    clickFloor(floorObject) {\r\n      this.clickFloorIndexes = [];\r\n      this.clickFloorIndexes.push(floorObject.floorId);\r\n\r\n      if (this.allImageMap.get(floorObject.floorId)) {\r\n        this.currentFloorImageName = this.allImageMap.get(floorObject.floorId).name;\r\n      } else {\r\n        this.currentFloorImageName = \"이미지를 업로드하세요\";\r\n      }\r\n\r\n      this.currentSelectedFloorObject = floorObject;\r\n      eventBus.$emit(\"pushSelectedFloorObject\", floorObject);\r\n    },\r\n    createFloorUUID() {\r\n      return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function (\r\n        c\r\n      ) {\r\n        let r = (Math.random() * 16) | 0,\r\n          v = c == \"x\" ? r : (r & 3) | 8;\r\n        return v.toString(16);\r\n      });\r\n    },\r\n    addFloor() {\r\n      let newFloorObject = {};\r\n      newFloorObject.floorId = this.createFloorUUID();\r\n      newFloorObject.floorName = \"\";\r\n      newFloorObject.buildingId = \"HANCOM01\";\r\n      newFloorObject.floorOrder = this.allFloorList.length;\r\n      newFloorObject.create = true;\r\n      newFloorObject.modify = false;\r\n      newFloorObject.delete = false;\r\n\r\n      this.allFloorList.push(newFloorObject);\r\n      this.managerFloorList.push(newFloorObject);\r\n\r\n      this.currentSelectedFloorObject = newFloorObject;\r\n\r\n      this.clickFloorIndexes = [];\r\n      this.clickFloorIndexes.push(this.currentSelectedFloorObject.floorId);\r\n\r\n      this.length++;\r\n\r\n      eventBus.$emit(\"pushSelectedFloorObject\", this.currentSelectedFloorObject);\r\n\r\n      let allFloorList = this.allFloorList.slice();\r\n      eventBus.$emit(\"pushAllFloorList\", allFloorList);\r\n\r\n      let managerFloorList = this.managerFloorList.slice();\r\n      eventBus.$emit(\"pushManagerFloorList\", managerFloorList);\r\n    },\r\n    editFloorName() {\r\n      const idx = this.allFloorList.findIndex((item) => {\r\n        //console.log(typeof item.floorId);//String\r\n        //console.log(typeof this.currentSelectedFloor.floorId); //String\r\n        return item.floorId === this.currentSelectedFloorObject.floorId;\r\n      });\r\n\r\n      this.allFloorList[idx].modify = true;\r\n      this.managerFloorList[idx].modify = true;\r\n\r\n      eventBus.$emit(\"pushChangedFloorName\", this.currentSelectedFloorObject.floorName);\r\n\r\n      let allFloorList = this.allFloorList.slice();\r\n      eventBus.$emit(\"pushAllFloorList\", allFloorList);\r\n\r\n      let managerFloorList = this.managerFloorList.slice();\r\n      eventBus.$emit(\"pushManagerFloorList\", managerFloorList);\r\n    },\r\n    removeFloor() {\r\n      if (this.length > 0) {\r\n        let currentFloorId = this.currentSelectedFloorObject.floorId;\r\n        const idx = this.allFloorList.findIndex(function (item) {\r\n          //console.log(typeof item.floorId) //String\r\n          //console.log(typeof currentFloorId) //String\r\n          return item.floorId === currentFloorId; //String\r\n        });\r\n        if (idx > -1) {\r\n          eventBus.$emit(\"pushDeletedFloorId\", this.allFloorList[idx].floorId);\r\n          this.allFloorList.splice(idx, 1);\r\n          this.managerFloorList[idx].delete = true;\r\n\r\n          let nextIdx = null;\r\n          console.log(typeof idx) //number\r\n          console.log(typeof 0) //number\r\n          if (idx === 0) { //number\r\n            nextIdx = idx;\r\n          } else {\r\n            nextIdx = idx - 1;\r\n          }\r\n\r\n          eventBus.$emit(\"pushSelectedFloorObject\", this.allFloorList[nextIdx]);\r\n\r\n          let allFloorList = this.allFloorList.slice();\r\n          eventBus.$emit(\"pushAllFloorList\", allFloorList);\r\n\r\n          let managerFloorList = this.managerFloorList.slice();\r\n          eventBus.$emit(\"pushManagerFloorList\", managerFloorList);\r\n\r\n          this.currentSelectedFloorObject = this.allFloorList[nextIdx];\r\n        }\r\n\r\n        this.length--;\r\n\r\n        if (this.length > 0) {\r\n          this.clickFloorIndexes = [];\r\n          this.clickFloorIndexes.push(this.currentSelectedFloorObject.floorId);\r\n        }\r\n      } else {\r\n        alert(\"there are no seats to delete!\");\r\n      }\r\n    },\r\n    changeImageFile(e) {\r\n      let files = e.target.files || e.dataTransfer.files;\r\n      if (!files.length) return;\r\n      this.saveImageFile(files[0]);\r\n    },\r\n    saveImageFile(file) {\r\n      this.allImageMap.set(this.currentSelectedFloorObject.floorId, file);\r\n      this.currentFloorImageName = this.allImageMap.get(\r\n        this.currentSelectedFloorObject.floorId\r\n      ).name;\r\n      eventBus.$emit(\"pushAllImageMap\", this.allImageMap);\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/ManageFloors.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('v-card',{attrs:{\"flat\":\"\",\"color\":\"transparent\"}},[_c('v-row',[_c('v-col',{attrs:{\"cols\":\"12\",\"sm\":\"8\"}},[_c('v-card-title',[_c('v-icon',{attrs:{\"large\":\"\"}},[_vm._v(\"stairs\")]),_vm._v(\" \"),_c('h3',[_vm._v(\"층 설정\")])],1)],1),_c('v-col',{attrs:{\"cols\":\"12\",\"sm\":\"4\"}},[_c('v-btn',{attrs:{\"small\":\"\"}},[_c('v-icon',{attrs:{\"medium\":\"\",\"dark\":\"\"},on:{\"click\":_vm.removeFloor}},[_vm._v(\"remove_circle\")])],1),_vm._v(\" \"),_c('v-btn',{attrs:{\"small\":\"\"}},[_c('v-icon',{attrs:{\"medium\":\"\",\"dark\":\"\"},on:{\"click\":_vm.addFloor}},[_vm._v(\"add_circle\")])],1)],1)],1),_vm._v(\" \"),_c('v-row',{staticStyle:{\"overflow-y\":\"scroll\",\"height\":\"180px\"}},_vm._l((this.allFloorList),function(floorObject){return _c('v-col',{key:floorObject.floorId,staticClass:\"d-flex child-flex\",attrs:{\"cols\":\"4\"}},[_c('v-tooltip',{attrs:{\"bottom\":\"\"},scopedSlots:_vm._u([{key:\"activator\",fn:function(ref){\nvar on = ref.on;\nreturn [_c('v-btn',_vm._g({style:({\n                border: _vm.clickFloorIndexes.includes(floorObject.floorId)\n                  ? 'thick solid black'\n                  : '',\n              }),attrs:{\"large\":\"\"},on:{\"click\":function($event){return _vm.clickFloor(floorObject)},\"mouseover\":function($event){return _vm.showToolTip(floorObject)}}},on),[_c('h3',[_vm._v(_vm._s(floorObject.floorName))])])]}}],null,true)},[_vm._v(\" \"),_c('span',{domProps:{\"innerHTML\":_vm._s(_vm.toolTipText)}})])],1)}),1),_vm._v(\" \"),_c('v-divider',{staticClass:\"mx-4\"}),_vm._v(\" \"),_c('v-card-title',[_c('v-icon',{attrs:{\"large\":\"\"}},[_vm._v(\"stairs\")]),_vm._v(\" \"),_c('h3',[_vm._v(\"층 이름 편집\")])],1),_vm._v(\" \"),(_vm.currentSelectedFloorObject)?_c('v-row',[_c('v-col',{attrs:{\"cols\":\"12\",\"sm\":\"9\"}},[_c('v-text-field',{attrs:{\"label\":\"층 이름을 입력하세요\",\"solo\":\"\"},on:{\"keyup\":_vm.editFloorName},model:{value:(_vm.currentSelectedFloorObject.floorName),callback:function ($$v) {_vm.$set(_vm.currentSelectedFloorObject, \"floorName\", $$v)},expression:\"currentSelectedFloorObject.floorName\"}})],1),_vm._v(\" \"),_c('v-col',{attrs:{\"cols\":\"12\",\"sm\":\"3\"}},[_c('v-card-text',[_c('h2',[_vm._v(\"층\")])])],1)],1):_vm._e(),_vm._v(\" \"),_c('v-divider',{staticClass:\"mx-4\"}),_vm._v(\" \"),_c('v-card-title',[_c('v-icon',{attrs:{\"large\":\"\"}},[_vm._v(\"image\")]),_vm._v(\" \"),_c('h3',[_vm._v(\"배경화면 설정\")])],1),_vm._v(\" \"),_c('v-row',[_c('v-col',{attrs:{\"cols\":\"12\",\"sm\":\"9\"}},[_c('v-card',[_c('v-card-text',[_vm._v(_vm._s(_vm.currentFloorImageName))])],1)],1),_vm._v(\" \"),_c('v-col',{attrs:{\"cols\":\"12\",\"sm\":\"3\"}},[_c('v-card-text',[_c('input',{directives:[{name:\"show\",rawName:\"v-show\",value:(false),expression:\"false\"}],ref:\"Upload\",attrs:{\"type\":\"file\"},on:{\"change\":_vm.changeImageFile}}),_vm._v(\" \"),_c('v-btn',{attrs:{\"color\":\"blue-grey lighten-2\"},on:{\"click\":function($event){return _vm.$refs.Upload.click()}}},[_c('h4',[_vm._v(\"업로드\")])])],1)],1)],1)],1)],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-2f11b6e0\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/ManageFloors.vue\n// module id = null\n// module chunks = ","<template>\r\n  <v-card flat color=\"transparent\">\r\n    <v-card-title>\r\n      <v-text-field\r\n        v-model=\"search\"\r\n        append-icon=\"mdi-magnify\"\r\n        label=\"이름/부서/내선번호 중 입력하세요. 예) 마효리, 부서1, 111-0001\"\r\n        single-line\r\n        hide-details\r\n      ></v-text-field>\r\n    </v-card-title>\r\n\r\n    <v-data-table\r\n      :headers=\"headers\"\r\n      :items=\"allEmployeeSeat\"\r\n      :search=\"search\"\r\n      height=\"400px\"\r\n      class=\"elevation-1\"\r\n      no-data-text=\"데이터가 없습니다\"\r\n      :footer-props=\"{\r\n        'items-per-page-text': '페이지 당 자리수',\r\n        'items-per-page-options': [5, 10],\r\n      }\"\r\n    >\r\n      <template v-slot:item=\"row\">\r\n        <tr>\r\n          <td>{{ row.item.name }}</td>\r\n          <td>{{ row.item.department }}</td>\r\n          <td>{{ row.item.number }}</td>\r\n          <td>\r\n            <v-icon\r\n              large\r\n              id=\"showSeatButton\"\r\n              @click=\"showSeatButtonClicked(row.item)\"\r\n              >event_seat</v-icon\r\n            >\r\n          </td>\r\n        </tr>\r\n      </template>\r\n    </v-data-table>\r\n  </v-card>\r\n</template>\r\n\r\n<script>\r\nimport { eventBus } from \"../main.js\";\r\n\r\nexport default {\r\n  name: \"ManageSearch\",\r\n  props: [\"eachEmployeeSeatMap\"],\r\n  data() {\r\n    return {\r\n      allEmployeeSeat: [],\r\n      allEmployeeSeatMap: this.eachEmployeeSeatMap, //attach(db) -> employeeMap -> 이벤트버스로 불려온것\r\n\r\n      search: \"\",\r\n      headers: [\r\n        { text: \"이름\", align: \"start\", sortable: true, value: \"name\" },\r\n        { text: \"부서\", value: \"department\" },\r\n        { text: \"내선번호\", value: \"number\" },\r\n        { text: \"\", value: \"showSeatButton\" },\r\n      ],\r\n    };\r\n  },\r\n  created() {\r\n    eventBus.$on(\"pushEachEmployeeSeatMap\", (eachEmployeeSeatMap) => {\r\n      this.allEmployeeSeatMap = eachEmployeeSeatMap;\r\n      this.getAllEmployeeSeats();\r\n    });\r\n  },\r\n  mounted() {\r\n    this.getAllEmployeeSeats();\r\n  },\r\n  beforeDestroy() {\r\n    eventBus.$off(\"pushEachEmployeeSeatMap\");\r\n  },\r\n  methods: {\r\n    getAllEmployeeSeats() {\r\n      if (this.allEmployeeSeatMap) {\r\n        this.allEmployeeSeat = [];\r\n\r\n        let keys = [];\r\n        keys = Array.from(this.allEmployeeSeatMap.keys());\r\n\r\n        for (let i = 0; i < keys.length; i++) {\r\n          let seats = [];\r\n          seats = this.allEmployeeSeatMap.get(keys[i]);\r\n          for (let j = 0; j < seats.length; j++) {\r\n            let newSeatObject = {};\r\n\r\n            if (seats[j].employeeId != null) {\r\n              //공석 제외\r\n              newSeatObject.seatId = seats[j].seatId;\r\n              newSeatObject.employeeId = seats[j].employeeId;\r\n              newSeatObject.name = seats[j].employeeName;\r\n              newSeatObject.department = seats[j].employeeDepartment;\r\n              newSeatObject.floorId = seats[j].floorId;\r\n              newSeatObject.number = seats[j].employeeNumber;\r\n              this.allEmployeeSeat.push(newSeatObject);\r\n            }\r\n          }\r\n        }\r\n      }\r\n    },\r\n    showSeatButtonClicked(clickedSeat) {\r\n      eventBus.$emit(\"showSeatHighlight\", clickedSeat); //좌석 하이라이트\r\n      eventBus.$emit(\"pushFloorOfSeat\", clickedSeat.floorId); //층 이동\r\n    },\r\n  },\r\n};\r\n</script>\n\n\n// WEBPACK FOOTER //\n// src/components/ManageSearch.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('v-card',{attrs:{\"flat\":\"\",\"color\":\"transparent\"}},[_c('v-card-title',[_c('v-text-field',{attrs:{\"append-icon\":\"mdi-magnify\",\"label\":\"이름/부서/내선번호 중 입력하세요. 예) 마효리, 부서1, 111-0001\",\"single-line\":\"\",\"hide-details\":\"\"},model:{value:(_vm.search),callback:function ($$v) {_vm.search=$$v},expression:\"search\"}})],1),_vm._v(\" \"),_c('v-data-table',{staticClass:\"elevation-1\",attrs:{\"headers\":_vm.headers,\"items\":_vm.allEmployeeSeat,\"search\":_vm.search,\"height\":\"400px\",\"no-data-text\":\"데이터가 없습니다\",\"footer-props\":{\n      'items-per-page-text': '페이지 당 자리수',\n      'items-per-page-options': [5, 10],\n    }},scopedSlots:_vm._u([{key:\"item\",fn:function(row){return [_c('tr',[_c('td',[_vm._v(_vm._s(row.item.name))]),_vm._v(\" \"),_c('td',[_vm._v(_vm._s(row.item.department))]),_vm._v(\" \"),_c('td',[_vm._v(_vm._s(row.item.number))]),_vm._v(\" \"),_c('td',[_c('v-icon',{attrs:{\"large\":\"\",\"id\":\"showSeatButton\"},on:{\"click\":function($event){return _vm.showSeatButtonClicked(row.item)}}},[_vm._v(\"event_seat\")])],1)])]}}])})],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-245f9454\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/ManageSearch.vue\n// module id = null\n// module chunks = ","<template>\r\n  <div>\r\n    <v-toolbar color=\"black\" dark> </v-toolbar>\r\n      <v-tabs v-model=\"tab\" background-color=\"black\" dark height=\"65\" horizontal grow>\r\n          <v-tabs-slider color=\"blue\"></v-tabs-slider>\r\n        <v-tab  v-for=\"item in items\" :key=\"item.index\">\r\n          <v-icon large dark>{{ item.icon }}</v-icon></v-tab>\r\n      </v-tabs>\r\n\r\n    <v-tabs-items v-model=\"tab\">\r\n      <v-tab-item v-for=\"item in items\" :key=\"item.index\">\r\n        <v-card flat>\r\n          <v-card-text>\r\n            <component\r\n              v-bind:is=\"item.content\"\r\n              :copyFromTabsEmployeeList=\"employeeList\"\r\n              :copyFromTabsFloorList=\"floors\"\r\n              :eachEmployeeSeatMap=\"eachEmployeeSeatMap\"\r\n              :copyFromTabsLatestFloorImage=\"latestFloorImage\"\r\n              :copyFromTabsOtherFloorsImageList=\"otherFloorsImageList\"\r\n            ></component>\r\n          </v-card-text>\r\n        </v-card>\r\n      </v-tab-item>\r\n    </v-tabs-items>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { eventBus } from \"../main\";\r\nimport ManageSeats from \"@/components/ManageSeats.vue\";\r\nimport ManageFloors from \"@/components/ManageFloors.vue\";\r\nimport ManageSearch from \"@/components/ManageSearch.vue\";\r\n\r\nexport default {\r\n  props: [\r\n    \"copyEmployeeList\",\r\n    \"copyFloorList\",\r\n    \"copyLatestFloorImage\",\r\n    \"copyOtherFloorsImageList\",\r\n  ],\r\n  components: {\r\n    ManageSeats,\r\n    ManageFloors,\r\n    ManageSearch,\r\n  },\r\n  data() {\r\n    return {\r\n      tab: null,\r\n\r\n      employeeList: this.copyEmployeeList,\r\n      floors: this.copyFloorList,\r\n\r\n      eachEmployeeSeatMap: null,\r\n\r\n      latestFloorImage: this.copyLatestFloorImage,\r\n      otherFloorsImageList: this.copyOtherFloorsImageList,\r\n\r\n      items: [\r\n        { icon: \"stairs\", title: \"층 설정\", index: 0, content: \"ManageFloors\" },\r\n        {\r\n          icon: \"event_seat\",\r\n          title: \"좌석 설정\",\r\n          index: 1,\r\n          content: \"ManageSeats\",\r\n        },\r\n        { icon: \"search\", index: 2, title: \"검색\", content: \"ManageSearch\" },\r\n      ],\r\n    };\r\n  },\r\n  created() {\r\n    eventBus.$on(\"pushEachEmployeeSeatMap\", (eachEmployeeSeatMap) => {\r\n      this.eachEmployeeSeatMap = eachEmployeeSeatMap;\r\n    });\r\n  },\r\n  beforeDestroy() {\r\n    eventBus.$off(\"pushEachEmployeeSeatMap\");\r\n  },\r\n};\r\n</script>\n\n\n// WEBPACK FOOTER //\n// src/components/Tabs.vue","var normalizeComponent = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./ManageFloors.vue\"\nimport __vue_script__ from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./ManageFloors.vue\"\n/* template */\nimport __vue_template__ from \"!!../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-2f11b6e0\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../node_modules/vue-loader/lib/selector?type=template&index=0!./ManageFloors.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = null\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/ManageFloors.vue\n// module id = null\n// module chunks = ","var normalizeComponent = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./ManageSearch.vue\"\nimport __vue_script__ from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./ManageSearch.vue\"\n/* template */\nimport __vue_template__ from \"!!../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-245f9454\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../node_modules/vue-loader/lib/selector?type=template&index=0!./ManageSearch.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = null\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/ManageSearch.vue\n// module id = null\n// module chunks = ","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('v-toolbar',{attrs:{\"color\":\"black\",\"dark\":\"\"}}),_vm._v(\" \"),_c('v-tabs',{attrs:{\"background-color\":\"black\",\"dark\":\"\",\"height\":\"65\",\"horizontal\":\"\",\"grow\":\"\"},model:{value:(_vm.tab),callback:function ($$v) {_vm.tab=$$v},expression:\"tab\"}},[_c('v-tabs-slider',{attrs:{\"color\":\"blue\"}}),_vm._v(\" \"),_vm._l((_vm.items),function(item){return _c('v-tab',{key:item.index},[_c('v-icon',{attrs:{\"large\":\"\",\"dark\":\"\"}},[_vm._v(_vm._s(item.icon))])],1)})],2),_vm._v(\" \"),_c('v-tabs-items',{model:{value:(_vm.tab),callback:function ($$v) {_vm.tab=$$v},expression:\"tab\"}},_vm._l((_vm.items),function(item){return _c('v-tab-item',{key:item.index},[_c('v-card',{attrs:{\"flat\":\"\"}},[_c('v-card-text',[_c(item.content,{tag:\"component\",attrs:{\"copyFromTabsEmployeeList\":_vm.employeeList,\"copyFromTabsFloorList\":_vm.floors,\"eachEmployeeSeatMap\":_vm.eachEmployeeSeatMap,\"copyFromTabsLatestFloorImage\":_vm.latestFloorImage,\"copyFromTabsOtherFloorsImageList\":_vm.otherFloorsImageList}})],1)],1)],1)}),1)],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-150fa57b\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/Tabs.vue\n// module id = null\n// module chunks = ","<template>\r\n  <div>\r\n    <v-toolbar color=\"black\" dark>\r\n      <v-toolbar-title>{{ currentSelectedFloorName }} 층</v-toolbar-title>\r\n      <v-spacer></v-spacer>\r\n      <v-toolbar-items class=\"hidden-sm-and-down\">\r\n        <v-btn @click=\"clickdeleteAllBtn\" text\r\n          ><v-icon large>delete</v-icon>모든 좌석 삭제</v-btn\r\n        >\r\n        <v-divider vertical></v-divider>\r\n        <v-btn @click=\"clickResetToRatioBtn\" text\r\n          ><v-icon large>zoom_out</v-icon> 배율 초기화\r\n        </v-btn>\r\n        <v-divider vertical></v-divider>\r\n        <v-btn @click=\"clickSaveBtn\" text\r\n          ><v-icon large>save</v-icon> 저장\r\n        </v-btn>\r\n        <v-divider vertical></v-divider>\r\n        <v-btn @click=\"clickPrintBtn\" text>\r\n          <v-icon large>print</v-icon>프린트\r\n        </v-btn>\r\n        <v-divider vertical></v-divider>\r\n        <v-btn @click=\"clickExportToCSVBtn\" text>\r\n          <v-icon large>cloud_download</v-icon> CSV 내려받기\r\n        </v-btn>\r\n        <v-divider vertical></v-divider>\r\n        <input\r\n          v-show=\"false\"\r\n          ref=\"Upload\"\r\n          type=\"file\"\r\n          accept=\".csv, application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel\"\r\n          @change=\"changeCSVFile\"\r\n        />\r\n        <v-btn @click=\"$refs.Upload.click()\" text>\r\n          <v-icon large>cloud_upload</v-icon> CSV 내용 db 업데이트하기\r\n        </v-btn>\r\n      </v-toolbar-items>\r\n    </v-toolbar>\r\n    <canvas\r\n      ref=\"canvas\"\r\n      class=\"canvas\"\r\n      id=\"canvas\"\r\n      height=\"770px\"\r\n      width=\"1150px\"\r\n      style=\"text-align: center\"\r\n    ></canvas>\r\n\r\n    <v-menu\r\n      v-model=\"contextMenuStatus\"\r\n      :position-x=\"contextMenuXLocation\"\r\n      :position-y=\"contextMenuYLocation\"\r\n      absolute\r\n      offset-y\r\n      max-width=\"180\"\r\n    >\r\n      <v-list>\r\n        <v-list-item\r\n          v-for=\"(item, index) in contextMenuItems\"\r\n          :key=\"index\"\r\n          @click=\"clickContextMenu(item.index)\"\r\n        >\r\n          <v-list-item-title>{{ item.title }}</v-list-item-title>\r\n        </v-list-item>\r\n      </v-list>\r\n    </v-menu>\r\n    <v-tooltip\r\n      top\r\n      v-model=\"toolTipStatus\"\r\n      :position-x=\"toolTipXLocation\"\r\n      :position-y=\"toolTipYLocation\"\r\n      :color=\"toolTipColor\"\r\n    >\r\n      <span v-html=\"toolTipText\"> </span>\r\n    </v-tooltip>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { eventBus } from \"../main.js\";\r\nexport default {\r\n  name: \"AttachCanvas\",\r\n  props: [\r\n    \"copyEmployeeList\",\r\n    \"copyFloorList\",\r\n    \"copyLatestFloorImage\",\r\n    \"copyOtherFloorsImageList\",\r\n    \"copyLatestFloorSeatList\",\r\n    \"copyOtherFloorsSeatMap\",\r\n  ],\r\n  data() {\r\n    return {\r\n      floorCanvas: null,\r\n\r\n      zoom: 1,\r\n      fontSize: 25,\r\n      clipboard: null,\r\n\r\n      currentSelectedFloorName: null,\r\n      currentSelectedFloorId: null,\r\n\r\n      latestFloorImageFromDb: this.copyLatestFloorImage,\r\n      otherFloorImageFromDb: this.copyOtherFloorsImageList,\r\n      allImageMap: null, //모든 이미지 저장과 로드(floorId / file or url)\r\n\r\n      latestFloorSeatListFromDb: this.copyLatestFloorSeatList,\r\n      otherFloorSeatListFromDb: this.copyOtherFloorsSeatMap,\r\n      //자리 Map <층이름, 자리리스트>\r\n      allSeatMap: null, //가시적 자리 map\r\n      managerAllSeatMap: null, //DB 관리 자리 map\r\n\r\n      employeeList: this.copyEmployeeList,\r\n      eachEmployeeSeatMap: null, //each Employee's seats map\r\n\r\n      allFloorList: this.copyFloorList, // 가시적 층 리스트\r\n      managerFloorList: this.copyFloorList, // DB 관리 층 리스트\r\n\r\n      contextMenuStatus: false,\r\n      contextMenuXLocation: 100,\r\n      contextMenuYLocation: 100,\r\n      contextMenuItems: [\r\n        { title: \"삭제하기\", index: 0 },\r\n        { title: \"복제하기\", index: 1 },\r\n      ],\r\n\r\n      toolTipStatus: false,\r\n      toolTipXLocation: 100,\r\n      toolTipYLocation: 100,\r\n      toolTipColor: null,\r\n      toolTipText: null,\r\n\r\n      addVacantSwitchStatus: false,\r\n\r\n      seatNumber: 0,\r\n\r\n      firstMouseDownX: 0,\r\n      firstMouseDownY: 0,\r\n    };\r\n  },\r\n  created() {\r\n    if (this.allFloorList && this.allFloorList.length) {\r\n      this.currentSelectedFloorName = this.allFloorList[\r\n        this.allFloorList.length - 1\r\n      ].floorName;\r\n      this.currentSelectedFloorId = this.allFloorList[\r\n        this.allFloorList.length - 1\r\n      ].floorId;\r\n    }\r\n\r\n    if (this.allImageMap == null) {\r\n      this.allImageMap = new Map();\r\n    }\r\n    if (this.allSeatMap == null) {\r\n      this.allSeatMap = new Map();\r\n    }\r\n    if (this.managerAllSeatMap == null) {\r\n      this.managerAllSeatMap = new Map();\r\n    }\r\n    if (this.eachEmployeeSeatMap == null) {\r\n      this.eachEmployeeSeatMap = new Map();\r\n    }\r\n\r\n    //선택한 층에 대한 값 받아와서 층 전환하기 위한 event\r\n    eventBus.$on(\"pushSelectedFloorObject\", (floorObject) => {\r\n      if (floorObject) {\r\n        this.currentSelectedFloorId = floorObject.floorId;\r\n        this.currentSelectedFloorName = floorObject.floorName;\r\n        this.changeFloor();\r\n      } else {\r\n        this.currentSelectedFloorId = null;\r\n        this.currentSelectedFloorName = null;\r\n\r\n        this.floorCanvas.backgroundImage = 0;\r\n        this.floorCanvas.backgroundColor = \"aliceblue\";\r\n        this.floorCanvas.getObjects().forEach((obj) => {\r\n          this.floorCanvas.remove(obj);\r\n        });\r\n      }\r\n    });\r\n\r\n    //층의 이름이 변경될시 화면에 표출되는 string값을 바꾸기 위한 event\r\n    eventBus.$on(\"pushChangedFloorName\", (changedFloorName) => {\r\n      this.currentSelectedFloorName = changedFloorName;\r\n    });\r\n\r\n    //공석 만들기 스위치 상태값 변경하기 위한 event\r\n    eventBus.$on(\"pushAddVacantSwitchStatus\", (switchStatus) => {\r\n      this.addVacantSwitchStatus = switchStatus;\r\n    });\r\n\r\n    //공석에 사원을 매핑하고자 함수를 호출하기 위한 event\r\n    eventBus.$on(\"mappingEmployeeToVacant\", (employeeObject) => {\r\n      this.mappingEmployeeToVacant(employeeObject);\r\n    });\r\n\r\n    //좌석(또는 공석)을 다른층으로 이동하고자 함수를 호출하기 위한 event\r\n    eventBus.$on(\"moveSeatToAnotherFloor\", (floorId) => {\r\n      this.moveSeatToAnotherFloor(floorId);\r\n    });\r\n\r\n    //좌석의 사원을 지우고 공석으로 바꾸는 함수를 호출하기 위한 event\r\n    eventBus.$on(\"changeSeatToVacant\", () => {\r\n      if (this.floorCanvas.getActiveObject()) {\r\n        this.changeSeatToVacant();\r\n      } else {\r\n        alert(\"there is no selected object\");\r\n      }\r\n    });\r\n\r\n    //모든 층 객체를 가지고 있는 리스트를 받기 위한 event\r\n    eventBus.$on(\"pushAllFloorList\", (allFloorList) => {\r\n      this.allFloorList = allFloorList;\r\n      console.log(this.allFloorList);\r\n    });\r\n\r\n    //db로 보내는 리스트에 활용되는 층 리스트를 받기 위한 event\r\n    eventBus.$on(\"pushManagerFloorList\", (managerFloorList) => {\r\n      this.managerFloorList = managerFloorList;\r\n      console.log(this.managerFloorList);\r\n    });\r\n\r\n    //이미지 Map 받아오기\r\n    eventBus.$on(\"pushAllImageMap\", (allImageMap) => {\r\n      this.allImageMap = allImageMap;\r\n      this.loadImageFile(this.allImageMap.get(this.currentSelectedFloorId));\r\n    });\r\n\r\n    //좌석 하이라이트 하는 함수를 호출하기 위한 event\r\n    eventBus.$on(\"showSeatHighlight\", (seatObject) => {\r\n      this.showSeatHighlight(seatObject);\r\n    });\r\n    \r\n    //삭제된 층의 아이디를 받기 위한 event\r\n    eventBus.$on(\"pushDeletedFloorId\", (floorId) => {\r\n      this.allSeatMap.delete(floorId);\r\n      //managerAllSeatMap 에서 삭제되어도 되는 이유 :\r\n      //managerFloorList만큼 저장을 하기때문에 그에 해당되지 않는 key는 저장이 되지 않을 것.\r\n      //그리고 DB에서도 삭제되는 층이 있으면 자동으로 그 층에 해당하는 자리들도 삭제함\r\n      this.managerAllSeatMap.delete(floorId);\r\n    });\r\n  },\r\n  mounted() {\r\n    this.initializing();\r\n    this.loadLatestFloor(); //현재 층 이미지와 자리 로드\r\n  },\r\n  beforeDestroy() {\r\n    eventBus.$off(\"moveSeatToAnotherFloor\");\r\n    eventBus.$off(\"pushSelectedFloor\");\r\n    eventBus.$off(\"pushChangedFloorName\");\r\n    eventBus.$off(\"pushAddVacantSwitchStatus\");\r\n    eventBus.$off(\"mappingEmployeeToVacant\");\r\n    eventBus.$off(\"pushAllFloorList\");\r\n    eventBus.$off(\"pushManagerFloorList\");\r\n    eventBus.$off(\"changeSeatToVacant\");\r\n    eventBus.$off(\"pushAllImageMap\");\r\n    eventBus.$off(\"showSeatHighlight\");\r\n    eventBus.$off(\"pushDeletedFloorId\");\r\n  },\r\n  methods: {\r\n    initializing() {\r\n      //canvas, map 생성\r\n      if (this.floorCanvas == null) {\r\n        const ref = this.$refs.canvas;\r\n        this.floorCanvas = new fabric.Canvas(ref, {\r\n          fireRightClick: true, //enable firing of right click events\r\n          fireMiddleClick: true, //enable firing of middle click events\r\n          stopContextMenu: true, //prevent context menu from showing\r\n        });\r\n\r\n        this.floorCanvas.on(\"mouse:wheel\", (opt) => {\r\n          if (!this.floorCanvas.viewportTransform) {\r\n            return;\r\n          }\r\n\r\n          let evt = opt.e;\r\n          let deltaY = evt.deltaY;\r\n          this.zoom = this.floorCanvas.getZoom();\r\n          this.zoom = this.zoom - deltaY / 300;\r\n\r\n          if (evt.ctrlKey === true) {\r\n            //zoom in and out\r\n            if (this.zoom > 10) this.zoom = 10;\r\n            else if (this.zoom < 1) this.zoom = 1;\r\n\r\n            this.floorCanvas.zoomToPoint(\r\n              new fabric.Point(evt.offsetX, evt.offsetY),\r\n              this.zoom\r\n            );\r\n          } else {\r\n            //reset canvas ratio\r\n            this.floorCanvas.setViewportTransform([1, 0, 0, 1, 0, 0]);\r\n            this.zoom = 1;\r\n          }\r\n          this.checkZoom();\r\n\r\n          opt.e.preventDefault();\r\n          opt.e.stopPropagation();\r\n        });\r\n\r\n        this.floorCanvas.on(\"object:moving\", function (e) {\r\n          var obj = e.target;\r\n          // if object is too big ignore\r\n          if (\r\n            obj.currentHeight > obj.canvas.height ||\r\n            obj.currentWidth > obj.canvas.width\r\n          ) {\r\n            return;\r\n          }\r\n          obj.setCoords();\r\n          // top-left  corner\r\n          if (obj.getBoundingRect().top < 0 || obj.getBoundingRect().left < 0) {\r\n            obj.top = Math.max(obj.top, obj.top - obj.getBoundingRect().top);\r\n            obj.left = Math.max(\r\n              obj.left,\r\n              obj.left - obj.getBoundingRect().left\r\n            );\r\n          }\r\n          // bot-right corner\r\n          if (\r\n            obj.getBoundingRect().top + obj.getBoundingRect().height >\r\n              obj.canvas.height ||\r\n            obj.getBoundingRect().left + obj.getBoundingRect().width >\r\n              obj.canvas.width\r\n          ) {\r\n            obj.top = Math.min(\r\n              obj.top,\r\n              obj.canvas.height -\r\n                obj.getBoundingRect().height +\r\n                obj.top -\r\n                obj.getBoundingRect().top\r\n            );\r\n            obj.left = Math.min(\r\n              obj.left,\r\n              obj.canvas.width -\r\n                obj.getBoundingRect().width +\r\n                obj.left -\r\n                obj.getBoundingRect().left\r\n            );\r\n          }\r\n        });\r\n\r\n        var left1 = 0;\r\n        var top1 = 0;\r\n        var scale1x = 0;\r\n        var scale1y = 0;\r\n        var width1 = 0;\r\n        var height1 = 0;\r\n        this.floorCanvas.on(\"object:scaling\", function (e) {\r\n          var obj = e.target;\r\n          obj.setCoords();\r\n          var brNew = obj.getBoundingRect();\r\n\r\n          if (\r\n            brNew.width + brNew.left >= obj.canvas.width ||\r\n            brNew.height + brNew.top >= obj.canvas.height ||\r\n            brNew.left < 0 ||\r\n            brNew.top < 0\r\n          ) {\r\n            obj.left = left1;\r\n            obj.top = top1;\r\n            obj.scaleX = scale1x;\r\n            obj.scaleY = scale1y;\r\n            obj.width = width1;\r\n            obj.height = height1;\r\n          } else {\r\n            left1 = obj.left;\r\n            top1 = obj.top;\r\n            scale1x = obj.scaleX;\r\n            scale1y = obj.scaleY;\r\n            width1 = obj.width;\r\n            height1 = obj.height;\r\n          }\r\n        });\r\n\r\n        //원하는 위치에 자동으로 공석 생성하기\r\n        this.floorCanvas.on(\"mouse:down\", (event) => {\r\n          if (event.button === 3) {\r\n            if (this.addVacantSwitchStatus) {\r\n              var pointer = this.floorCanvas.getPointer(event.e);\r\n              this.firstMouseDownX = pointer.x;\r\n              this.firstMouseDownY = pointer.y;\r\n\r\n              console.log(this.firstMouseDownX);\r\n              console.log(this.firstMouseDownY);\r\n            } else if (this.floorCanvas.getActiveObject()) {\r\n              //contextMenu\r\n              var posX = event.e.clientX;\r\n              var posY = event.e.clientY;\r\n              this.showContextMenuOfOneSeat(posX, posY);\r\n            }\r\n          }\r\n        });\r\n\r\n        this.floorCanvas.on(\"mouse:up\", (event) => {\r\n          if (event.button === 3) {\r\n            if (this.addVacantSwitchStatus) {\r\n              var pointer = this.floorCanvas.getPointer(event.e);\r\n              var mouseUpX = pointer.x;\r\n              var mouseUpY = pointer.y;\r\n\r\n              console.log(mouseUpX);\r\n              console.log(mouseUpY);\r\n              console.log(\"mouseup\");\r\n\r\n              //console.log(typeof this.firstMouseDownX) //number\r\n              //console.log(typeof mouseUpX) //number\r\n              //console.log(typeof this.firstMouseDownY) //number\r\n              //console.log(typeof mouseUpY) //number\r\n\r\n              if (\r\n                this.firstMouseDownX === mouseUpX &&\r\n                this.firstMouseDownY === mouseUpY\r\n              ) {\r\n                return;\r\n              } else {\r\n                if (!this.allImageMap.get(this.currentSelectedFloorId)) {\r\n                  alert(\"도면 이미지가 없습니다\");\r\n                  return;\r\n                }\r\n                if (this.currentSelectedFloorName == \"\") {\r\n                  alert(\"층 이름이 설정되지 않았습니다.\");\r\n                  return;\r\n                }\r\n\r\n                console.log(this.firstMouseDownX);\r\n                console.log(this.firstMouseDownY);\r\n\r\n                this.addVacantSeat(\r\n                  this.firstMouseDownX,\r\n                  this.firstMouseDownY,\r\n                  mouseUpX,\r\n                  mouseUpY\r\n                );\r\n              }\r\n            }\r\n          }\r\n        });\r\n\r\n        this.floorCanvas.on(\"object:modified\", (e) => {\r\n          this.floorCanvas.getObjects().forEach((obj) => {\r\n            obj.set(\"modify\", true);\r\n          });\r\n        });\r\n\r\n        this.floorCanvas.on(\"mouse:over\", (event) => {\r\n          let group = event.target;\r\n          if (group != null) {\r\n            var posX = event.e.clientX;\r\n            var posY = event.e.clientY;\r\n\r\n            let groupToObject = group.toObject([\r\n              \"employeeId\",\r\n              \"employeeName\",\r\n              \"employeeDepartment\",\r\n              \"employeeNumber\",\r\n            ]);\r\n\r\n            this.showToolTip(\r\n              posX,\r\n              posY,\r\n              groupToObject.employeeId,\r\n              groupToObject.employeeName,\r\n              groupToObject.employeeDepartment,\r\n              groupToObject.employeeNumber\r\n            );\r\n          }\r\n        });\r\n\r\n        this.floorCanvas.on(\"mouse:out\", (event) => {\r\n          this.toolTipStatus = false;\r\n        });\r\n\r\n        this.manageKeyboard(); //키보드 조작(상하좌우 이동/복붙/삭제)\r\n      }\r\n    },\r\n    clickResetToRatioBtn() {\r\n      this.floorCanvas.setViewportTransform([1, 0, 0, 1, 0, 0]);\r\n    },\r\n    checkZoom() {\r\n      // text, fontSize 관련\r\n      let currentZoom = this.zoom;\r\n      if (5 <= currentZoom && currentZoom <= 7) {\r\n        this.floorCanvas.getObjects().forEach((obj) => {\r\n          if (obj.employeeName) {\r\n            obj.item(1).text = obj.employeeName;\r\n            obj.item(1).fontSize = parseInt(this.fontSize / currentZoom);\r\n          }\r\n        });\r\n      } else if (7 < currentZoom && currentZoom <= 10) {\r\n        this.floorCanvas.getObjects().forEach((obj) => {\r\n          if (obj.employeeName) {\r\n            obj.item(1).text = obj.employeeName + \"\\n\" + obj.employeeNumber;\r\n            obj.item(1).fontSize = parseInt(this.fontSize / currentZoom);\r\n          }\r\n        });\r\n      } else {\r\n        this.floorCanvas.getObjects().forEach((obj) => {\r\n          obj.item(1).text = \"\";\r\n          obj.item(1).fontSize = parseInt(this.fontSize / currentZoom);\r\n        });\r\n      }\r\n    },\r\n    changeFloor() {\r\n      this.floorCanvas\r\n        .getObjects()\r\n        .slice()\r\n        .forEach((obj) => {\r\n          this.floorCanvas.remove(obj);\r\n        });\r\n      this.floorCanvas.discardActiveObject();\r\n\r\n      let eachfloorSeatList = this.getEachFloorSeatList(\r\n        this.currentSelectedFloorId\r\n      );\r\n      let managerEachFloorSeatList = this.getManagerEachFloorSeatList(\r\n        this.currentSelectedFloorId\r\n      );\r\n      this.seatNumber = 0;\r\n\r\n      if (this.allImageMap.get(this.currentSelectedFloorId) != null) {\r\n        let typeCheck = this.allImageMap.get(this.currentSelectedFloorId);\r\n        if (typeof typeCheck === \"string\") {\r\n          //url\r\n          this.loadImageUrl(this.allImageMap.get(this.currentSelectedFloorId));\r\n        } else {\r\n          //file\r\n          this.loadImageFile(this.allImageMap.get(this.currentSelectedFloorId));\r\n        }\r\n        //현재 층에 그린 도형들이 있다면\r\n        if (eachfloorSeatList) {\r\n          for (let i = 0; i < eachfloorSeatList.length; i++) {\r\n            this.floorCanvas.add(eachfloorSeatList[i]);\r\n          }\r\n          eventBus.$emit(\"pushAllSeatMap\", this.allSeatMap);\r\n        }\r\n      } else if (this.allImageMap.get(this.currentSelectedFloorId) == null) {\r\n        //현재 층의 이미지가 저장되어있지 않다면 화면에 그려져있던 이미지와 도형 초기화\r\n        this.floorCanvas\r\n          .getObjects()\r\n          .slice()\r\n          .forEach((obj) => {\r\n            this.floorCanvas.remove(obj);\r\n          });\r\n\r\n        this.floorCanvas.backgroundImage = 0;\r\n        this.floorCanvas.backgroundColor = \"aliceblue\";\r\n        this.floorCanvas.renderAll();\r\n\r\n        eventBus.$emit(\"pushAllSeatMap\", this.allSeatMap);\r\n      }\r\n    },\r\n    loadImageFile(file) {\r\n      let reader = new FileReader();\r\n      reader.onload = (e) => {\r\n        this.loadImageUrl(e.target.result);\r\n      };\r\n      reader.readAsDataURL(file);\r\n    },\r\n    loadImageUrl(imgUrl) {\r\n      fabric.Image.fromURL(\r\n        imgUrl,\r\n        (img) => {\r\n          img.set({\r\n            scaleX: this.floorCanvas.width / img.width,\r\n            scaleY: this.floorCanvas.height / img.height,\r\n          });\r\n          this.floorCanvas.setBackgroundImage(\r\n            img,\r\n            this.floorCanvas.renderAll.bind(this.floorCanvas)\r\n          );\r\n        },\r\n        { crossOrigin: \"Anonymous\" }\r\n      );\r\n    },\r\n    //각 층의 도형 리스트 반환하기\r\n    getEachFloorSeatList: function (floor) {\r\n      if (!floor) {\r\n        // 초반에 층이 생성 안되었을때\r\n        return;\r\n      }\r\n      //층에 해당하는 도형리스트가 만들어지지 않았을때 각 층의 도형 리스트 생성하기\r\n      if (!this.allSeatMap.get(floor)) {\r\n        let newSeatsList = [];\r\n        this.allSeatMap.set(floor, newSeatsList);\r\n        //console.log(this.allSeatMap.size + \"allSeatMap 처음의 자리 맵 사이즈입니다\");\r\n        return this.allSeatMap.get(floor);\r\n      } else {\r\n        //console.log(this.allSeatMap.size + \"allSeatMap 현재 자리 맵 사이즈입니다\" );\r\n        return this.allSeatMap.get(floor);\r\n      }\r\n    },\r\n    getManagerEachFloorSeatList: function (floor) {\r\n      if (!floor) {\r\n        // 초반에 층이 생성 안되었을때\r\n        return;\r\n      }\r\n      if (!this.managerAllSeatMap.get(floor)) {\r\n        let newSeatsList = [];\r\n        this.managerAllSeatMap.set(floor, newSeatsList);\r\n        //console.log(this.managerAllSeatMap.size + \"managerAllSeatMap 처음의 자리 맵 사이즈입니다\");\r\n        return this.managerAllSeatMap.get(floor);\r\n      } else {\r\n        //console.log(this.managerAllSeatMap.size + \"managerAllSeatMap 현재 자리 맵 사이즈입니다\" );\r\n        return this.managerAllSeatMap.get(floor);\r\n      }\r\n    },\r\n    getEachEmployeeSeatList: function (employeeId) {\r\n      if (!this.eachEmployeeSeatMap.get(employeeId)) {\r\n        let newEmployeeSeatList = [];\r\n        this.eachEmployeeSeatMap.set(employeeId, newEmployeeSeatList);\r\n        return this.eachEmployeeSeatMap.get(employeeId);\r\n      } else {\r\n        return this.eachEmployeeSeatMap.get(employeeId);\r\n      }\r\n    },\r\n    // 해당 층의 도형 리스트의 Delete field 전체 true 만들기\r\n    deleteManagerEachFloorSeatList: function (floor) {\r\n      let managerEachFloorSeatList = this.getManagerEachFloorSeatList(floor);\r\n      //console.log(managerEachFloorSeatList);\r\n      for (let i = 0; i < managerEachFloorSeatList.length; i++) {\r\n        managerEachFloorSeatList[i].set(\"delete\", true);\r\n      }\r\n    },\r\n    //사원의 자리리스트에서 삭제된 자리를 삭제하기\r\n    deleteEachEmployeeSeatList: function (groupToObject) {\r\n      if (groupToObject.employeeId != null) {\r\n        let oneEmployeeSeatList = this.getEachEmployeeSeatList(\r\n          groupToObject.employeeId\r\n        );\r\n\r\n        if (oneEmployeeSeatList) {\r\n          for (let i = 0; i < oneEmployeeSeatList.length; i++) {\r\n            //console.log(typeof oneEmployeeSeatList[i].seatId); //String\r\n            //console.log(typeof groupToObject.seatId); //String\r\n            if (oneEmployeeSeatList[i].seatId === groupToObject.seatId) {\r\n              //String\r\n              oneEmployeeSeatList.splice(i, 1);\r\n            }\r\n          }\r\n        }\r\n      }\r\n    },\r\n    manageKeyboard() {\r\n      let ctrlDown = false;\r\n      document.addEventListener(\"keydown\", (event) => {\r\n        var key = window.event ? window.event.keyCode : event.keyCode;\r\n        switch (key) {\r\n          case 17:\r\n            ctrlDown = true;\r\n            console.log(\"ctrl true\");\r\n            break;\r\n          case 37: // left\r\n            if (this.floorCanvas.getActiveObject()) {\r\n              this.floorCanvas\r\n                .getActiveObject()\r\n                .set(\"left\", this.floorCanvas.getActiveObject().left - 5);\r\n              this.floorCanvas.getActiveObject().set(\"modify\", true);\r\n              this.floorCanvas.renderAll();\r\n            }\r\n            break;\r\n          case 39: // right\r\n            if (this.floorCanvas.getActiveObject()) {\r\n              this.floorCanvas\r\n                .getActiveObject()\r\n                .set(\"left\", this.floorCanvas.getActiveObject().left + 5);\r\n              this.floorCanvas.getActiveObject().set(\"modify\", true);\r\n              this.floorCanvas.renderAll();\r\n            }\r\n            break;\r\n          case 38: // up\r\n            if (this.floorCanvas.getActiveObject()) {\r\n              this.floorCanvas\r\n                .getActiveObject()\r\n                .set(\"top\", this.floorCanvas.getActiveObject().top - 5);\r\n              this.floorCanvas.getActiveObject().set(\"modify\", true);\r\n              this.floorCanvas.renderAll();\r\n            }\r\n            break;\r\n          case 40: // down\r\n            if (this.floorCanvas.getActiveObject()) {\r\n              this.floorCanvas\r\n                .getActiveObject()\r\n                .set(\"top\", this.floorCanvas.getActiveObject().top + 5);\r\n              this.floorCanvas.getActiveObject().set(\"modify\", true);\r\n              this.floorCanvas.renderAll();\r\n            }\r\n            break;\r\n          case 110:\r\n          case 46: // delete\r\n            this.deleteBtn();\r\n            break;\r\n        }\r\n        if (ctrlDown) {\r\n          switch (key) {\r\n            case 67:\r\n              this.copySelectedSeat();\r\n              break;\r\n            case 86:\r\n              this.pasteSelectedSeat();\r\n              break;\r\n          }\r\n        }\r\n      });\r\n      document.addEventListener(\"keyup\", (event) => {\r\n        var key = window.event ? window.event.keyCode : event.keyCode;\r\n        switch (key) {\r\n          case 17:\r\n            ctrlDown = false;\r\n            console.log(\"ctrl false\");\r\n            break;\r\n        }\r\n      });\r\n    },\r\n    createSeatUUID() {\r\n      return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function (\r\n        c\r\n      ) {\r\n        let r = (Math.random() * 16) | 0,\r\n          v = c == \"x\" ? r : (r & 3) | 8;\r\n        return v.toString(16);\r\n      });\r\n    },\r\n    getColor(department) {\r\n      const Colors = {\r\n        Orange: \"orange\",\r\n        Yellow: \"yellow\",\r\n        Green: \"green\",\r\n        Blue: \"blue\",\r\n        Gray: \"Gray\",\r\n      };\r\n      if (department == null) {\r\n        return Colors.Gray;\r\n      } else {\r\n        //console.log(typeof department);//String\r\n        //console.log(typeof \"부서1\");//String\r\n        if (department === \"부서1\") return Colors.Orange;\r\n        else if (department === \"부서2\") return Colors.Yellow;\r\n        else if (department === \"부서3\") return Colors.Green;\r\n      }\r\n    },\r\n\r\n    addVacantSeat(mouseDownX, mouseDownY, mouseUpX, mouseUpY) {\r\n      let eachFloorSeatList = this.getEachFloorSeatList(\r\n        this.currentSelectedFloorId\r\n      );\r\n      let managerEachFloorSeatList = this.getManagerEachFloorSeatList(\r\n        this.currentSelectedFloorId\r\n      );\r\n\r\n      let rectangle = new fabric.Rect({\r\n        width: Math.abs(mouseDownX - mouseUpX),\r\n        height: Math.abs(mouseDownY - mouseUpY),\r\n        fill: this.getColor(null),\r\n        opacity: 1,\r\n      });\r\n\r\n      let textObject = new fabric.IText(\"\", {\r\n        left: 0,\r\n        top: rectangle.height / 3,\r\n        fontSize: 0,\r\n        fill: \"black\",\r\n      });\r\n\r\n      let group = new fabric.Group([rectangle, textObject], {\r\n        seatId: this.createSeatUUID(),\r\n        floorId: this.currentSelectedFloorId,\r\n        employeeName: null,\r\n        employeeDepartment: null,\r\n        employeeNumber: null,\r\n        employeeId: null,\r\n        left: mouseDownX,\r\n        top: mouseDownY,\r\n        angle: 0,\r\n        create: true, //생성\r\n        modify: false, //변경\r\n        delete: false, //삭제\r\n      });\r\n\r\n      if (this.currentSelectedFloorName != null) {\r\n        if (\r\n          this.getManagerEachFloorSeatList(this.currentSelectedFloorId).length\r\n        ) {\r\n          let seatNumberArray = [];\r\n          this.getManagerEachFloorSeatList(this.currentSelectedFloorId).forEach(\r\n            (seat) => {\r\n              seatNumberArray.push(seat.seatName.split(\"-\")[1]);\r\n            }\r\n          );\r\n          //max\r\n          this.seatNumber = Math.max.apply(null, seatNumberArray);\r\n        }\r\n\r\n        this.seatNumber++;\r\n        let seatNameText =\r\n          this.currentSelectedFloorName + \"-\" + this.seatNumber;\r\n\r\n        let seatNameObject = new fabric.IText(seatNameText, {\r\n          left: group.item(0).left,\r\n          top: group.item(0).top - 15,\r\n          fontSize: this.fontSize / this.zoom,\r\n          fill: \"black\",\r\n        });\r\n        group.seatName = seatNameText;\r\n        group.add(seatNameObject);\r\n      }\r\n\r\n      this.floorCanvas.on(\"object:scaling\", (e) => {\r\n        let scaledObject = e.target;\r\n        let width = scaledObject.getScaledWidth() / scaledObject.scaleX;\r\n        let height = scaledObject.getScaledHeight() / scaledObject.scaleY;\r\n\r\n        scaledObject.width = width;\r\n        scaledObject.height = height;\r\n\r\n        let groupx = scaledObject.toObject([\r\n          \"width\",\r\n          \"height\",\r\n          \"scaleX\",\r\n          \"scaleY\",\r\n        ]);\r\n      });\r\n\r\n      this.floorCanvas.add(group);\r\n      this.floorCanvas.renderAll();\r\n      this.floorCanvas.setActiveObject(group);\r\n\r\n      eachFloorSeatList.push(group);\r\n      managerEachFloorSeatList.push(group);\r\n\r\n      eventBus.$emit(\"pushAllSeatMap\", this.allSeatMap);\r\n    },\r\n    mappingEmployeeToVacant(employeeObject) {\r\n      if (!this.floorCanvas.getActiveObject()) {\r\n        alert(\"선택된 좌석이 없습니다.\");\r\n        return;\r\n      }\r\n\r\n      let mappedOtherEmployeeSeatNameList = [];\r\n      this.floorCanvas.getActiveObjects().forEach((obj) => {\r\n        if (obj.employeeId && obj.employeeId != employeeObject.employeeId) {\r\n          mappedOtherEmployeeSeatNameList.push(obj.seatName);\r\n        }\r\n      });\r\n\r\n      mappedOtherEmployeeSeatNameList.forEach((obj) => {\r\n        console.log(obj);\r\n      });\r\n\r\n      if (mappedOtherEmployeeSeatNameList.length > 0) {\r\n        if (\r\n          !confirm(\r\n            \"선택된 좌석 중 \" +\r\n              mappedOtherEmployeeSeatNameList.join(\", \") +\r\n              \"자리에 다른 사원이 매핑되어 있습니다.\\n\" +\r\n              \"변경하시겠습니까?\"\r\n          )\r\n        ) {\r\n          return;\r\n        }\r\n      }\r\n\r\n      let eachEmployeeSeatList = this.getEachEmployeeSeatList(employeeObject.employeeId);\r\n\r\n      this.floorCanvas.getActiveObjects().forEach((obj) => {\r\n        if (obj.employeeId && obj.employeeId != employeeObject.employeeId) {\r\n          // 다른 사원이 매핑된 좌석\r\n          let groupToObject = obj.toObject([\"seatId\", \"employeeId\"]);\r\n          this.deleteEachEmployeeSeatList(groupToObject);\r\n        }\r\n        // 다른 사원이 매핑된 좌석 + 공석\r\n        obj.employeeName = employeeObject.name;\r\n        obj.employeeDepartment = employeeObject.department;\r\n        obj.employeeNumber = employeeObject.number;\r\n        obj.employeeId = employeeObject.employeeId;\r\n        obj.item(0).set(\"fill\", this.getColor(obj.employeeDepartment));\r\n        obj.set(\"modify\", true);\r\n        eachEmployeeSeatList.push(obj);\r\n      });\r\n\r\n      this.checkZoom();\r\n      this.floorCanvas.renderAll();\r\n      eventBus.$emit(\"pushAllSeatMap\", this.allSeatMap);\r\n      eventBus.$emit(\"pushEachEmployeeSeatMap\", this.eachEmployeeSeatMap);\r\n    },\r\n    clickdeleteAllBtn() {\r\n      if (confirm(\"Are you sure?\")) {\r\n        this.floorCanvas\r\n          .getObjects()\r\n          .slice()\r\n          .forEach((obj) => {\r\n            let groupToObject = obj.toObject([\"seatId\", \"employeeId\"]);\r\n            this.deleteEachEmployeeSeatList(groupToObject);\r\n            this.floorCanvas.remove(obj);\r\n          });\r\n\r\n        this.getEachFloorSeatList(this.currentSelectedFloorId).length = 0;\r\n        this.deleteManagerEachFloorSeatList(this.currentSelectedFloorId);\r\n\r\n        eventBus.$emit(\"pushEachEmployeeSeatMap\", this.eachEmployeeSeatMap);\r\n      } else {\r\n        return;\r\n      }\r\n    },\r\n    deleteBtn() {\r\n      let activeObject = null;\r\n      let shapearray = [];\r\n\r\n      let eachFloorSeatList = this.getEachFloorSeatList(\r\n        this.currentSelectedFloorId\r\n      );\r\n      if (confirm(\"Are you sure?\")) {\r\n        this.floorCanvas.getActiveObjects().forEach((obj) => {\r\n          obj.set(\"delete\", true);\r\n          let groupToObject = obj.toObject([\"seatId\", \"employeeId\"]);\r\n          this.deleteEachEmployeeSeatList(groupToObject);\r\n          console.log(this.eachEmployeeSeatMap);\r\n          console.log(eachFloorSeatList);\r\n\r\n          let index = eachFloorSeatList.indexOf(obj);\r\n          eachFloorSeatList.splice(index, 1);\r\n          console.log(eachFloorSeatList);\r\n          this.floorCanvas.remove(obj);\r\n\r\n          eventBus.$emit(\"pushEachEmployeeSeatMap\", this.eachEmployeeSeatMap);\r\n        });\r\n      } else {\r\n        return;\r\n      }\r\n    },\r\n    changeSeatToVacant() {\r\n      if (confirm(\"자리를 비우시겠습니까?\")) {\r\n        this.floorCanvas.getActiveObjects().forEach((obj) => {\r\n          let groupToObject = obj.toObject([\"seatId\", \"employeeId\"]);\r\n          this.deleteEachEmployeeSeatList(groupToObject);\r\n          obj.set(\"modify\", true);\r\n          obj.set(\"employeeName\", null);\r\n          obj.set(\"employeeDepartment\", null);\r\n          obj.set(\"employeeNumber\", null);\r\n          obj.set(\"employeeId\", null);\r\n          obj.item(0).set(\"fill\", this.getColor(obj.employeeDepartment));\r\n          this.floorCanvas.remove(obj.item(1)); // delete textObject\r\n          obj.item(1).set(\"text\", \"\");\r\n        });\r\n\r\n        this.floorCanvas.renderAll();\r\n        eventBus.$emit(\"pushAllSeatMap\", this.allSeatMap);\r\n        eventBus.$emit(\"pushEachEmployeeSeatMap\", this.eachEmployeeSeatMap);\r\n      } else {\r\n        return;\r\n      }\r\n    },\r\n    //복제하기 (컨텍스트 메뉴 내부)\r\n    cloneSeat() {\r\n      this.copySelectedSeat();\r\n      this.pasteSelectedSeat();\r\n    },\r\n    //clone하기 (ctrl+c)\r\n    copySelectedSeat() {\r\n      if (!this.floorCanvas.getActiveObject()) return;\r\n      //this.clipboard = null;\r\n      this.floorCanvas.getActiveObject().clone((cloned) => {\r\n        this.clipboard = cloned;\r\n      });\r\n\r\n      this.clipboard.remove(this.clipboard.item(2));\r\n    },\r\n    //paste하기 (ctrl+v)\r\n    pasteSelectedSeat() {\r\n      if (!this.floorCanvas.getActiveObject()) return;\r\n      let activeObject = this.floorCanvas.getActiveObject();\r\n      let eachFloorSeatList = this.getEachFloorSeatList(\r\n        this.currentSelectedFloorId\r\n      );\r\n      let managerEachFloorList = this.getManagerEachFloorSeatList(\r\n        this.currentSelectedFloorId\r\n      );\r\n      let eachEmployeeSeatList = this.getEachEmployeeSeatList(\r\n        this.floorCanvas.getActiveObject().employeeId\r\n      );\r\n\r\n      this.clipboard.clone((clonedObj) => {\r\n        this.floorCanvas.discardActiveObject();\r\n        clonedObj.set({\r\n          left: clonedObj.left + 10,\r\n          top: clonedObj.top + 10,\r\n          create: true,\r\n          delete: false,\r\n          modify: false,\r\n          seatId: this.createSeatUUID(),\r\n          floorId: this.currentSelectedFloorId,\r\n          angle: activeObject.angle,\r\n          employeeDepartment: activeObject.employeeDepartment,\r\n          employeeId: activeObject.employeeId,\r\n          employeeName: activeObject.employeeName,\r\n          employeeNumber: activeObject.employeeNumber,\r\n          evented: true,\r\n        });\r\n\r\n        let seatNumberArray = [];\r\n        this.getManagerEachFloorSeatList(this.currentSelectedFloorId).forEach(\r\n          (seat) => {\r\n            seatNumberArray.push(seat.seatName.split(\"-\")[1]);\r\n          }\r\n        );\r\n\r\n        this.seatNumber = Math.max.apply(null, seatNumberArray);\r\n\r\n        this.seatNumber++;\r\n\r\n        clonedObj.seatName =\r\n          this.currentSelectedFloorName + \"-\" + this.seatNumber;\r\n\r\n        let seatNameObject = new fabric.IText(clonedObj.seatName, {\r\n          left: clonedObj.item(0).left,\r\n          top: clonedObj.item(0).top - 15,\r\n          fontSize: this.fontSize / this.zoom,\r\n          fill: \"black\",\r\n        });\r\n        clonedObj.add(seatNameObject);\r\n\r\n        if (clonedObj.type === \"activeSelection\") {\r\n          clonedObj.canvas = this.floorCanvas;\r\n          clonedObj.forEachObject(function (obj) {\r\n            this.floorCanvas.add(obj);\r\n          });\r\n          // this should solve the unselectability\r\n          clonedObj.setCoords();\r\n        } else {\r\n          this.floorCanvas.add(clonedObj);\r\n        }\r\n        this.clipboard.top += 10;\r\n        this.clipboard.left += 10;\r\n\r\n        this.floorCanvas.setActiveObject(clonedObj);\r\n        this.floorCanvas.requestRenderAll();\r\n\r\n        eachFloorSeatList.push(clonedObj);\r\n        managerEachFloorList.push(clonedObj);\r\n        eachEmployeeSeatList.push(clonedObj);\r\n      });\r\n\r\n      eventBus.$emit(\"pushAllSeatMap\", this.allSeatMap);\r\n      eventBus.$emit(\"pushEachEmployeeSeatMap\", this.eachEmployeeSeatMap);\r\n    },\r\n    showContextMenuOfOneSeat(clientX, clientY) {\r\n      this.contextMenuStatus = false;\r\n      this.contextMenuXLocation = clientX + 10;\r\n      this.contextMenuYLocation = clientY;\r\n      this.$nextTick(() => {\r\n        this.contextMenuStatus = true;\r\n      });\r\n    },\r\n    clickContextMenu(index) {\r\n      switch (index) {\r\n        case 0:\r\n          this.deleteBtn();\r\n          break;\r\n        case 1:\r\n          this.cloneSeat();\r\n          break;\r\n      }\r\n    },\r\n    showToolTip(\r\n      clientX,\r\n      clientY,\r\n      employeeId,\r\n      employeeName,\r\n      employeeDepartment,\r\n      employeeNumber\r\n    ) {\r\n      this.toolTipXLocation = clientX;\r\n      this.toolTipYLocation = clientY;\r\n\r\n      if (employeeId == null) {\r\n        this.toolTipText = \"공석\";\r\n        this.toolTipColor = null;\r\n      } else {\r\n        this.toolTipText =\r\n          \"이름 : \" +\r\n          employeeName +\r\n          \"<br>아이디 : \" +\r\n          employeeId +\r\n          \"<br>부서 : \" +\r\n          employeeDepartment +\r\n          \"<br>내선번호 : \" +\r\n          employeeNumber;\r\n\r\n        this.toolTipColor = \"pink lighten-2\";\r\n      }\r\n\r\n      this.toolTipStatus = true;\r\n    },\r\n    // 층간이동\r\n    moveSeatToAnotherFloor(floorId) {\r\n      if (!this.floorCanvas.getActiveObject()) {\r\n        alert(\"이동할 좌석이 선택되지 않았습니다.\");\r\n        return;\r\n      }\r\n      let eachFloorSeatList = this.getEachFloorSeatList(\r\n        this.currentSelectedFloorId\r\n      );\r\n\r\n      let managerEachFloorSeatList = this.getEachFloorSeatList(\r\n        this.currentSelectedFloorId\r\n      );\r\n\r\n      for (let i = 0; i < this.allFloorList.length; i++) {\r\n        //console.log(typeof this.allFloorList[i].floorId) //String\r\n        //console.log(typeof floorId) //String\r\n        if (this.allFloorList[i].floorId === floorId) {\r\n          this.floorCanvas.getActiveObjects().forEach((obj) => {\r\n            obj.set(\"floorId\", this.allFloorList[i].floorId);\r\n            obj.set(\"floorName\", this.allFloorList[i].floorName);\r\n            obj.set(\"modify\", true);\r\n\r\n            let changeFloorSeatList = this.getEachFloorSeatList(\r\n              this.allFloorList[i].floorId\r\n            );\r\n            let changeManagerFloorSeatList = this.getManagerEachFloorSeatList(\r\n              this.allFloorList[i].floorId\r\n            );\r\n\r\n            changeFloorSeatList.push(obj);\r\n            changeManagerFloorSeatList.push(obj);\r\n\r\n            //이동 후에 원래 list에서 삭제\r\n            for (let j = 0; j < eachFloorSeatList.length; j++) {\r\n              //console.log(typeof eachFloorSeatList[j].seatId);//String\r\n              //console.log(typeof obj.seatId);//String\r\n              if (eachFloorSeatList[j].seatId === obj.seatId) { //String\r\n                eachFloorSeatList.splice(j, 1);\r\n              }\r\n            }\r\n            for (let j = 0; j < managerEachFloorSeatList.length; j++) {\r\n              //console.log(typeof managerEachFloorSeatList[j].seatId);//String\r\n              //console.log(typeof obj.seatId);//String\r\n              if (managerEachFloorSeatList[j].seatId === obj.seatId) { //String\r\n                managerEachFloorSeatList[j].set(\"delete\", true);\r\n              }\r\n            }\r\n            eventBus.$emit(\"pushFloorOfSeat\", this.allFloorList[i].floorId);\r\n            eventBus.$emit(\"pushEachEmployeeSeatMap\", this.eachEmployeeSeatMap);\r\n          });\r\n          this.floorCanvas.renderAll();\r\n        }\r\n      }\r\n    },\r\n    showSeatHighlight(seatObject) {\r\n      //좌석 하이라이트\r\n      let seatFloor = null;\r\n      //seat의 층과 현재층이 같지 않다면\r\n      if (this.currentSelectedFloorId != seatObject.floorId) {\r\n        //탭 전환 코드\r\n        seatFloor = seatObject.floorId;\r\n      }\r\n      //seat의 층과 현재층이 같다면\r\n      else {\r\n        seatFloor = this.currentSelectedFloorId;\r\n      }\r\n\r\n      let eachFloorSeatList = this.getEachFloorSeatList(seatFloor);\r\n      for (let i = 0; i < eachFloorSeatList.length; i++) {\r\n        let group = eachFloorSeatList[i];\r\n        let asObject = group.toObject([\r\n          \"employeeId\",\r\n          \"floorId\",\r\n          \"seatId\",\r\n          \"employeeDepartment\",\r\n        ]);\r\n\r\n        let objectSeatId = asObject.seatId;\r\n        if (seatObject.seatId == objectSeatId) {\r\n          this.floorCanvas\r\n            .getObjects()\r\n            .slice()\r\n            .forEach((obj) => {\r\n              this.floorCanvas.remove(obj);\r\n            });\r\n\r\n          //각 층의 저장된 도형 리스트 화면에 뿌려주기\r\n          //현재 층의 이미지가 저장되어있다면\r\n          if (this.allImageMap.get(seatFloor) != null) {\r\n            let getImageTypeForTypeCheck = this.allImageMap.get(\r\n              this.currentSelectedFloorId\r\n            );\r\n            if (typeof getImageTypeForTypeCheck === \"string\") {\r\n              //url\r\n              this.loadImageUrl(\r\n                this.allImageMap.get(this.currentSelectedFloorId)\r\n              );\r\n            } else {\r\n              //file\r\n              this.loadImageFile(\r\n                this.allImageMap.get(this.currentSelectedFloorId)\r\n              );\r\n            }\r\n\r\n            for (let i = 0; i < eachFloorSeatList.length; i++) {\r\n              this.floorCanvas.add(eachFloorSeatList[i]);\r\n            }\r\n          }\r\n          group.item(0).set(\"opacity\", 0);\r\n          group.item(0).set(\"stroke\", \"blue\");\r\n          group.item(0).set(\"strokeWidth\", 5);\r\n\r\n          group.item(0).animate(\"opacity\", 1, {\r\n            duration: 2000,\r\n            onChange: this.floorCanvas.renderAll.bind(this.floorCanvas),\r\n          });\r\n          group.item(0).animate(\"fill\", \"red\", {\r\n            onChange: this.floorCanvas.renderAll.bind(this.floorCanvas),\r\n            duration: 2000,\r\n            onComplete: getOrginItem,\r\n          });\r\n\r\n          let color = this.getColor(asObject.employeeDepartment);\r\n          function getOrginItem() {\r\n            group.item(0).set(\"opacity\", 1);\r\n            group.item(0).set(\"fill\", color);\r\n            group.item(0).set(\"stroke\", null);\r\n            group.item(0).set(\"strokeWidth\", null);\r\n          }\r\n        }\r\n        //자리가 아직 없을때 예외처리 하기\r\n      }\r\n    },\r\n    clickExportToCSVBtn() {\r\n      //csv 내려받기 //seatName, employeeid, floorId\r\n      //for (let i = 0; i < this.managerFloorList.length; i++) {\r\n      let floorId = this.currentSelectedFloorId;\r\n      this.$emit(\"downloadCSVFile\", floorId);\r\n      //}\r\n    },\r\n    changeCSVFile(e) {\r\n      let files = e.target.files || e.dataTransfer.files;\r\n      if (!files.length) return;\r\n      this.saveFromCSVFileToDB(files[0]);\r\n    },\r\n    saveFromCSVFileToDB(csvFile) {\r\n      //csv 수정했을시에 db로 정보 save하기\r\n      var newFileForCSVType = new File([csvFile], csvFile.name, {\r\n        type: \"text/csv\",\r\n      });\r\n      console.log(newFileForCSVType);\r\n\r\n      let floorId = this.currentSelectedFloorId;\r\n      let csvFileData = new FormData();\r\n      csvFileData.append(\"file\", newFileForCSVType);\r\n\r\n      this.$emit(\"saveFromCSVFileToDB\", csvFileData, floorId);\r\n    },\r\n\r\n    clickSaveBtn() {\r\n      this.floorCanvas.discardActiveObject();\r\n\r\n      if (this.managerFloorList) {\r\n        //층 저장\r\n        for (let i = 0; i < this.managerFloorList.length; i++) {\r\n          if (!this.managerFloorList[i].create) {\r\n            // 원본\r\n            if (this.managerFloorList[i].delete) {\r\n              // 001 011 delete\r\n              let deleteFloorKey = this.managerFloorList[i].floorId;\r\n              this.$emit(\"deleteFloorWithKey\", \"floors\", deleteFloorKey);\r\n            } else if (this.managerFloorList[i].modify) {\r\n              //010 그 id에 대하여 post\r\n              let floorData = {};\r\n              floorData.floor_id = this.managerFloorList[i].floorId;\r\n              floorData.floor_name = this.managerFloorList[i].floorName;\r\n              floorData.building_id = this.managerFloorList[i].buildingId;\r\n              floorData.floor_order = this.managerFloorList[i].floorOrder;\r\n\r\n              this.$emit(\"saveFloors\", \"floors\", floorData);\r\n            }\r\n          } else {\r\n            // front에서 생성\r\n            if (this.managerFloorList[i].delete) {\r\n              //101 111 nothing\r\n              continue;\r\n            } else {\r\n              //100 110 그 id에 대하여 post\r\n              let floorData = {};\r\n              floorData.floor_id = this.managerFloorList[i].floorId;\r\n              floorData.floor_name = this.managerFloorList[i].floorName;\r\n              floorData.building_id = this.managerFloorList[i].buildingId;\r\n              floorData.floor_order = this.managerFloorList[i].floorOrder;\r\n\r\n              this.$emit(\"saveFloors\", \"floors\", floorData);\r\n            }\r\n          }\r\n        }\r\n\r\n        //이미지 저장\r\n        for (let i = 0; i < this.managerFloorList.length; i++) {\r\n          let imgData = new FormData();\r\n          let floorId = this.managerFloorList[i].floorId;\r\n\r\n          let file = this.allImageMap.get(floorId);\r\n\r\n          if (file != null) {\r\n            if (typeof file === \"string\") {\r\n              //url\r\n            } else {\r\n              //file\r\n              imgData.append(\"imageFile\", file);\r\n              this.$emit(\"saveImages\", \"images\", imgData, floorId);\r\n            }\r\n          }\r\n        }\r\n\r\n        //자리 저장\r\n        for (let i = 0; i < this.managerFloorList.length; i++) {\r\n          let managerEachFloorSeatList = this.getManagerEachFloorSeatList(\r\n            this.managerFloorList[i].floorId\r\n          );\r\n\r\n          if (managerEachFloorSeatList.length > 0) {\r\n            for (let j = 0; j < managerEachFloorSeatList.length; j++) {\r\n              let groupToObject = managerEachFloorSeatList[j].toObject([\r\n                \"seatId\",\r\n                \"seatName\",\r\n                \"floorId\",\r\n                \"left\",\r\n                \"top\",\r\n                \"employeeDepartment\",\r\n                \"employeeId\",\r\n                \"width\",\r\n                \"height\",\r\n                \"scaleX\",\r\n                \"scaleY\",\r\n                \"create\",\r\n                \"modify\",\r\n                \"delete\",\r\n              ]);\r\n\r\n              //console.log(groupToObject);\r\n              //axios api 호출\r\n              if (!groupToObject.create) {\r\n                // 원본\r\n                if (groupToObject.delete) {\r\n                  // 001 011 delete\r\n                  let deleteSeatKey = groupToObject.seatId;\r\n                  let deleteSeatFloor = groupToObject.floorId;\r\n                  this.$emit(\r\n                    \"deleteSeatWithKey\",\r\n                    \"seats\",\r\n                    deleteSeatKey,\r\n                    deleteSeatFloor\r\n                  );\r\n                } else if (groupToObject.modify) {\r\n                  //010 그 id에 대하여 post\r\n                  let seatData = {};\r\n                  seatData.seat_id = groupToObject.seatId;\r\n                  seatData.seat_name = groupToObject.seatName;\r\n                  seatData.floor = groupToObject.floorId;\r\n                  seatData.x = groupToObject.left;\r\n                  seatData.y = groupToObject.top;\r\n                  seatData.is_group = false;\r\n                  seatData.group_id = null;\r\n                  seatData.building_id = \"HANCOM01\";\r\n                  seatData.employee_id = groupToObject.employeeId;\r\n                  seatData.width = groupToObject.width * groupToObject.scaleX;\r\n                  seatData.height = groupToObject.height * groupToObject.scaleY;\r\n                  seatData.degree = groupToObject.angle;\r\n                  seatData.shape_id = \"1\";\r\n\r\n                  this.$emit(\"saveSeats\", \"seats\", seatData, seatData.floor);\r\n                }\r\n              } else {\r\n                // front에서 생성\r\n                if (groupToObject.delete) {\r\n                  //101 111 nothing\r\n                  continue;\r\n                } else {\r\n                  //100 110 그 id에 대하여 post\r\n                  let seatData = {};\r\n                  seatData.seat_id = groupToObject.seatId;\r\n                  seatData.seat_name = groupToObject.seatName;\r\n                  seatData.floor = groupToObject.floorId;\r\n                  seatData.x = groupToObject.left;\r\n                  seatData.y = groupToObject.top;\r\n                  seatData.is_group = false;\r\n                  seatData.group_id = null;\r\n                  seatData.building_id = \"HANCOM01\";\r\n                  seatData.employee_id = groupToObject.employeeId;\r\n                  seatData.width = groupToObject.width * groupToObject.scaleX;\r\n                  seatData.height = groupToObject.height * groupToObject.scaleY;\r\n                  seatData.degree = groupToObject.angle;\r\n                  seatData.shape_id = \"1\";\r\n\r\n                  this.$emit(\"saveSeats\", \"seats\", seatData, seatData.floor);\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    },\r\n    getEmployeeObject(employeeId) {\r\n      // seat table의 employeeId를 받으면 그에 맞는 정보 알아오기 위함\r\n      let employeeInfoList = [];\r\n      let employeeObject = {}; // return 될 Object\r\n      for (let i = 0; i < this.employeeList.length; i++) {\r\n        let employee = {};\r\n        employee.name = this.employeeList[i].name;\r\n        employee.department = this.employeeList[i].department;\r\n        employee.number = this.employeeList[i].number;\r\n        employee.employeeId = this.employeeList[i].employeeId;\r\n\r\n        employeeInfoList.push(employee);\r\n      }\r\n\r\n      if (employeeId == null) {\r\n        // 공석\r\n        let employee = {};\r\n        employee.name = null;\r\n        employee.department = null;\r\n        employee.number = null;\r\n\r\n        employeeObject = employee;\r\n      } else {\r\n        // 매핑된 자리\r\n        for (let i = 0; i < employeeInfoList.length; i++) {\r\n          //console.log(typeof employeeId)//String\r\n          //console.log(typeof employeeInfoList[i].employeeId)//String\r\n          if (employeeId === employeeInfoList[i].employeeId) {\r\n            employeeObject = employeeInfoList[i];\r\n          }\r\n        }\r\n      }\r\n      return employeeObject; // return 받아서 department, name, number 뽑아쓰기\r\n    },\r\n    makeGroupInfo(seat) {\r\n      let employee = this.getEmployeeObject(seat.employeeId);\r\n\r\n      let rectangle = new fabric.Rect({\r\n        width: seat.width,\r\n        height: seat.height,\r\n        fill: this.getColor(employee.department),\r\n        opacity: 1,\r\n      });\r\n\r\n      let textObject = new fabric.IText(\"\", {\r\n        left: 0,\r\n        top: rectangle.height / 3,\r\n        fontSize: 0,\r\n        fill: \"black\",\r\n      });\r\n\r\n      let group = new fabric.Group([rectangle, textObject], {\r\n        seatId: seat.seatId,\r\n        employeeName: employee.name,\r\n        employeeDepartment: employee.department,\r\n        employeeNumber: employee.number,\r\n        employeeId: seat.employeeId,\r\n        floorId: seat.floorId,\r\n        left: seat.x,\r\n        top: seat.y,\r\n        angle: seat.degree,\r\n        create: seat.create,\r\n        modify: seat.modify,\r\n        delete: seat.delete,\r\n      });\r\n\r\n      let seatNameObject = new fabric.IText(seat.seatName, {\r\n        left: rectangle.left,\r\n        top: rectangle.top - 15,\r\n        fontSize: this.fontSize / this.zoom,\r\n        fill: \"black\",\r\n      });\r\n\r\n      group.seatName = seat.seatName;\r\n      group.add(seatNameObject);\r\n\r\n      this.floorCanvas.on(\"object:scaling\", (e) => {\r\n        let scaledObject = e.target;\r\n        let width = scaledObject.getScaledWidth() / scaledObject.scaleX;\r\n        let height = scaledObject.getScaledHeight() / scaledObject.scaleY;\r\n\r\n        scaledObject.width = width;\r\n        scaledObject.height = height;\r\n\r\n        let groupx = scaledObject.toObject([\r\n          \"width\",\r\n          \"height\",\r\n          \"scaleX\",\r\n          \"scaleY\",\r\n        ]);\r\n      });\r\n\r\n      return group;\r\n    },\r\n    loadLatestFloor() {\r\n      //현재 층 이미지 로드\r\n      if (this.latestFloorImageFromDb) {\r\n        for (let i = 0; i < this.latestFloorImageFromDb.length; i++) {\r\n          let imgUrl = this.latestFloorImageFromDb[i].url;\r\n          let floorId = this.latestFloorImageFromDb[i].floorId;\r\n          this.allImageMap.set(floorId, imgUrl);\r\n\r\n          this.currentSelectedFloorId = floorId;\r\n\r\n          this.loadImageUrl(imgUrl);\r\n          // 현재층 자리 로드\r\n\r\n          if (this.latestFloorSeatListFromDb.length) {\r\n            for (let i = 0; i < this.latestFloorSeatListFromDb.length; i++) {\r\n              this.currentSelectedFloorId = this.latestFloorSeatListFromDb[\r\n                i\r\n              ].floorId;\r\n\r\n              let eachFloorSeatList = this.getEachFloorSeatList(\r\n                this.latestFloorSeatListFromDb[i].floorId\r\n              );\r\n              let managerEachFloorSeatList = this.getManagerEachFloorSeatList(\r\n                this.latestFloorSeatListFromDb[i].floorId\r\n              );\r\n\r\n              let group = this.makeGroupInfo(this.latestFloorSeatListFromDb[i]);\r\n\r\n              this.floorCanvas.add(group);\r\n\r\n              eachFloorSeatList.push(group);\r\n              managerEachFloorSeatList.push(group);\r\n\r\n              eventBus.$emit(\"pushAllSeatMap\", this.allSeatMap);\r\n\r\n              if (this.latestFloorSeatListFromDb[i].employeeId != null) {\r\n                let eachEmployeeSeatList = this.getEachEmployeeSeatList(\r\n                  this.latestFloorSeatListFromDb[i].employeeId\r\n                );\r\n                eachEmployeeSeatList.push(group);\r\n                eventBus.$emit(\"pushEachEmployeeSeatMap\", this.eachEmployeeSeatMap);\r\n              }\r\n            }\r\n          } else {\r\n            this.currentSelectedFloorId = floorId;\r\n          }\r\n        }\r\n        this.loadOtherFloors();\r\n      }\r\n    },\r\n    loadOtherFloors() {\r\n      if (this.otherFloorSeatListFromDb) {\r\n        //다른 층 이미지 로드\r\n        for (let i = 0; i < this.otherFloorImageFromDb.length; i++) {\r\n          let imgUrl = this.otherFloorImageFromDb[i].url;\r\n          let floorId = this.otherFloorImageFromDb[i].floorId;\r\n          this.allImageMap.set(floorId, imgUrl);\r\n        }\r\n        //다른 층 자리 로드\r\n        if (this.otherFloorSeatListFromDb) {\r\n          let keys = [];\r\n          keys = Array.from(this.otherFloorSeatListFromDb.keys());\r\n\r\n          for (let i = 0; i < keys.length; i++) {\r\n            let seats = [];\r\n            seats = this.otherFloorSeatListFromDb.get(keys[i]);\r\n\r\n            for (let j = 0; j < seats.length; j++) {\r\n              let eachFloorSeatList = this.getEachFloorSeatList(seats[j].floorId);\r\n              let managerEachFloorSeatList = this.getManagerEachFloorSeatList(\r\n                seats[j].floorId\r\n              );\r\n\r\n              let group = this.makeGroupInfo(seats[j]);\r\n\r\n              eachFloorSeatList.push(group);\r\n              managerEachFloorSeatList.push(group);\r\n\r\n              if (seats[j].employeeId != null) {\r\n                let eachEmployeeSeatList = this.getEachEmployeeSeatList(\r\n                  seats[j].employeeId\r\n                );\r\n                eachEmployeeSeatList.push(group);\r\n                eventBus.$emit(\"pushEachEmployeeSeatMap\", this.eachEmployeeSeatMap);\r\n              }\r\n\r\n              eventBus.$emit(\"pushAllSeatMap\", this.allSeatMap);\r\n            }\r\n          }\r\n        }\r\n      }\r\n    },\r\n    clickPrintBtn() {\r\n      var printWin = window.open(\"\", \"\", \"width=1500,height=800\");\r\n      let dateUrl = document.getElementById(\"canvas\").toDataURL();\r\n\r\n      var windowContent = \"<!DOCTYPE html>\";\r\n      windowContent += \"<html>\";\r\n      windowContent += \"<head><title>Hnazari</title>\";\r\n      //windowContent += \"<style> @media print{.myDivToPrint {background-color: white; height: 100%;width: 100%;position: fixed;top: 0;left: 0;margin: 0;padding: 15px;font-size: 14px;line-height: 18px;}</style>\";\r\n      windowContent += \"</head>\";\r\n      windowContent += \"<body>\";\r\n      windowContent +=\r\n        '<img src=\"' + dateUrl + '\" onload=window.print();window.close();>';\r\n      windowContent += \"</body>\";\r\n      windowContent += \"</html>\";\r\n\r\n      printWin.document.write(windowContent);\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.canvas {\r\n  margin-left: 45px;\r\n  border: 1px solid #000;\r\n  background: aliceblue;\r\n  width: 75%;\r\n  height: 100%;\r\n}\r\nul {\r\n  padding: 0px;\r\n  margin: 0px;\r\n  display: block;\r\n}\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/AssignSeats.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('v-toolbar',{attrs:{\"color\":\"black\",\"dark\":\"\"}},[_c('v-toolbar-title',[_vm._v(_vm._s(_vm.currentSelectedFloorName)+\" 층\")]),_vm._v(\" \"),_c('v-spacer'),_vm._v(\" \"),_c('v-toolbar-items',{staticClass:\"hidden-sm-and-down\"},[_c('v-btn',{attrs:{\"text\":\"\"},on:{\"click\":_vm.clickdeleteAllBtn}},[_c('v-icon',{attrs:{\"large\":\"\"}},[_vm._v(\"delete\")]),_vm._v(\"모든 좌석 삭제\")],1),_vm._v(\" \"),_c('v-divider',{attrs:{\"vertical\":\"\"}}),_vm._v(\" \"),_c('v-btn',{attrs:{\"text\":\"\"},on:{\"click\":_vm.clickResetToRatioBtn}},[_c('v-icon',{attrs:{\"large\":\"\"}},[_vm._v(\"zoom_out\")]),_vm._v(\" 배율 초기화\\n      \")],1),_vm._v(\" \"),_c('v-divider',{attrs:{\"vertical\":\"\"}}),_vm._v(\" \"),_c('v-btn',{attrs:{\"text\":\"\"},on:{\"click\":_vm.clickSaveBtn}},[_c('v-icon',{attrs:{\"large\":\"\"}},[_vm._v(\"save\")]),_vm._v(\" 저장\\n      \")],1),_vm._v(\" \"),_c('v-divider',{attrs:{\"vertical\":\"\"}}),_vm._v(\" \"),_c('v-btn',{attrs:{\"text\":\"\"},on:{\"click\":_vm.clickPrintBtn}},[_c('v-icon',{attrs:{\"large\":\"\"}},[_vm._v(\"print\")]),_vm._v(\"프린트\\n      \")],1),_vm._v(\" \"),_c('v-divider',{attrs:{\"vertical\":\"\"}}),_vm._v(\" \"),_c('v-btn',{attrs:{\"text\":\"\"},on:{\"click\":_vm.clickExportToCSVBtn}},[_c('v-icon',{attrs:{\"large\":\"\"}},[_vm._v(\"cloud_download\")]),_vm._v(\" CSV 내려받기\\n      \")],1),_vm._v(\" \"),_c('v-divider',{attrs:{\"vertical\":\"\"}}),_vm._v(\" \"),_c('input',{directives:[{name:\"show\",rawName:\"v-show\",value:(false),expression:\"false\"}],ref:\"Upload\",attrs:{\"type\":\"file\",\"accept\":\".csv, application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel\"},on:{\"change\":_vm.changeCSVFile}}),_vm._v(\" \"),_c('v-btn',{attrs:{\"text\":\"\"},on:{\"click\":function($event){return _vm.$refs.Upload.click()}}},[_c('v-icon',{attrs:{\"large\":\"\"}},[_vm._v(\"cloud_upload\")]),_vm._v(\" CSV 내용 db 업데이트하기\\n      \")],1)],1)],1),_vm._v(\" \"),_c('canvas',{ref:\"canvas\",staticClass:\"canvas\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"canvas\",\"height\":\"770px\",\"width\":\"1150px\"}}),_vm._v(\" \"),_c('v-menu',{attrs:{\"position-x\":_vm.contextMenuXLocation,\"position-y\":_vm.contextMenuYLocation,\"absolute\":\"\",\"offset-y\":\"\",\"max-width\":\"180\"},model:{value:(_vm.contextMenuStatus),callback:function ($$v) {_vm.contextMenuStatus=$$v},expression:\"contextMenuStatus\"}},[_c('v-list',_vm._l((_vm.contextMenuItems),function(item,index){return _c('v-list-item',{key:index,on:{\"click\":function($event){return _vm.clickContextMenu(item.index)}}},[_c('v-list-item-title',[_vm._v(_vm._s(item.title))])],1)}),1)],1),_vm._v(\" \"),_c('v-tooltip',{attrs:{\"top\":\"\",\"position-x\":_vm.toolTipXLocation,\"position-y\":_vm.toolTipYLocation,\"color\":_vm.toolTipColor},model:{value:(_vm.toolTipStatus),callback:function ($$v) {_vm.toolTipStatus=$$v},expression:\"toolTipStatus\"}},[_c('span',{domProps:{\"innerHTML\":_vm._s(_vm.toolTipText)}})])],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-2a875ccc\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/AssignSeats.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-2a875ccc\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../node_modules/vue-loader/lib/selector?type=styles&index=0!./AssignSeats.vue\")\n}\nvar normalizeComponent = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./AssignSeats.vue\"\nimport __vue_script__ from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./AssignSeats.vue\"\n/* template */\nimport __vue_template__ from \"!!../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-2a875ccc\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../node_modules/vue-loader/lib/selector?type=template&index=0!./AssignSeats.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-2a875ccc\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/AssignSeats.vue\n// module id = null\n// module chunks = ","<template>\r\n  <v-app id=\"app\">\r\n    <div class=\"hanzari\" id=\"hanzari\">\r\n      <v-app-bar app dark>\r\n        <v-toolbar color=\"black\" dark>\r\n          <v-spacer>\r\n            <v-toolbar-items>\r\n              <v-icon large dark @click=\"drawer = !drawer\" v-if=\"drawer\"\r\n                >keyboard_arrow_left</v-icon\r\n              >\r\n              <v-icon large dark @click=\"drawer = !drawer\" v-if=\"!drawer\"\r\n                >keyboard_arrow_right</v-icon\r\n              >\r\n            </v-toolbar-items>\r\n          </v-spacer>\r\n          <v-toolbar-title>한자리</v-toolbar-title></v-toolbar\r\n        >\r\n      </v-app-bar>\r\n\r\n      <v-navigation-drawer v-model=\"drawer\" app :width=\"500\">\r\n        <Tabs\r\n          v-if=\"\r\n            employeeList &&\r\n            floorList &&\r\n            latestFloorImage &&\r\n            otherFloorsImageList\r\n          \"\r\n          v-bind:copyEmployeeList=\"employeeList\"\r\n          v-bind:copyFloorList=\"floorList\"\r\n          v-bind:copyLatestFloorImage=\"latestFloorImage\"\r\n          v-bind:copyOtherFloorsImageList=\"otherFloorsImageList\"\r\n        />\r\n      </v-navigation-drawer>\r\n      <v-main>\r\n        <AssignSeats\r\n          v-if=\"\r\n            employeeList &&\r\n            floorList &&\r\n            latestFloorImage &&\r\n            latestFloorSeatList &&\r\n            otherFloorsImageList &&\r\n            otherFloorsSeatMap\r\n          \"\r\n          v-bind:copyEmployeeList=\"employeeList\"\r\n          v-bind:copyFloorList=\"floorList\"\r\n          v-bind:copyLatestFloorImage=\"latestFloorImage\"\r\n          v-bind:copyOtherFloorsImageList=\"otherFloorsImageList\"\r\n          v-bind:copyLatestFloorSeatList=\"latestFloorSeatList\"\r\n          v-bind:copyOtherFloorsSeatMap=\"otherFloorsSeatMap\"\r\n          v-on:saveImages=\"saveImages\"\r\n          v-on:saveFloors=\"saveFloors\"\r\n          v-on:saveSeats=\"saveSeats\"\r\n          v-on:deleteFloorWithKey=\"deleteFloorWtihKey\"\r\n          v-on:deleteSeatWithKey=\"deleteSeatWithKey\"\r\n          v-on:downloadCSVFile=\"downloadCSVFile\"\r\n          v-on:saveFromCSVFileToDB=\"saveFromCSVFileToDB\"\r\n        />\r\n      </v-main>\r\n    </div>\r\n  </v-app>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\nimport { eventBus } from \"../main\";\r\n\r\nimport Tabs from \"@/components/Tabs.vue\";\r\nimport AssignSeats from \"@/components/AssignSeats.vue\";\r\nimport MappingEmployee from \"@/components/MappingEmployee.vue\";\r\n\r\nconst PORT_NUMBER = 8081;\r\nconst HOST = \"172.30.1.53\";\r\nconst BUILDING_ID = \"HANCOM01\";\r\n\r\nexport default {\r\n  name: \"Hanzari\",\r\n  components: {\r\n    Tabs,\r\n    AssignSeats,\r\n    MappingEmployee,\r\n  },\r\n  data() {\r\n    return {\r\n      drawer: null,\r\n      employeeList: null,\r\n\r\n      floorList: null,\r\n      floorIdList: [],\r\n      latestFloor: null,\r\n\r\n      latestFloorImage: null,\r\n      otherFloorsImageList: null,\r\n\r\n      latestFloorSeatList: null,\r\n      otherFloorsSeatMap: null,\r\n    };\r\n  },\r\n  async created() {\r\n    //사원 load\r\n    this.employeeList = await this.getEmployeeList();\r\n    //층 load\r\n    this.floorList = await this.getFloorList();\r\n    //가장 floor_order가 큰 층의 floorId를 가져오기 위함\r\n    this.latestFloor = await this.getLatestFloor();\r\n\r\n    // 최신 층 이미지 load\r\n    this.latestFloorImage = await this.getLatestFloorImage();\r\n    // 최신 층 자리 load\r\n    this.latestFloorSeatList = await this.getLatestFloorSeatList();\r\n\r\n    // 나머지 층 이미지 load\r\n    this.otherFloorsImageList = await this.getOtherFloorImageList();\r\n    // 나머지 층 자리 load\r\n    this.otherFloorsSeatMap = await this.getOtherFloorsSeatMap();\r\n  },\r\n  methods: {\r\n    async getEmployeeList() {\r\n      let allEmployeeList = [];\r\n      try {\r\n        let response = await axios.get(\r\n          \"http://\" + HOST + \":\" + PORT_NUMBER + \"/api/employee\"\r\n        );\r\n        for (var i = 0; i < response.data.length; i++) {\r\n          var newEmployeeObject = {};\r\n          newEmployeeObject.name = response.data[i].employee_name;\r\n          newEmployeeObject.department = response.data[i].department_name;\r\n          newEmployeeObject.number = response.data[i].extension_number;\r\n          newEmployeeObject.employeeId = response.data[i].employee_id;\r\n          newEmployeeObject.seatIdList = response.data[i].seatList;\r\n\r\n          allEmployeeList.push(newEmployeeObject);\r\n        }\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n      return allEmployeeList;\r\n    },\r\n    async getFloorList() {\r\n      let allFloorList = [];\r\n      try {\r\n        let response = await axios.get(\r\n          \"http://\" +\r\n            HOST +\r\n            \":\" +\r\n            PORT_NUMBER +\r\n            \"/api/buildings/\" +\r\n            BUILDING_ID +\r\n            \"/floors\"\r\n        );\r\n        for (var i = 0; i < response.data.length; i++) {\r\n          let newFloorObject = {};\r\n          newFloorObject.floorId = response.data[i].floor_id;\r\n          newFloorObject.floorName = response.data[i].floor_name;\r\n          newFloorObject.buildingId = response.data[i].building_id;\r\n          newFloorObject.floorOrder = response.data[i].floor_order;\r\n          newFloorObject.create = false;\r\n          newFloorObject.modify = false;\r\n          newFloorObject.delete = false;\r\n\r\n          allFloorList.push(newFloorObject);\r\n        }\r\n\r\n        allFloorList.sort(function (a, b) {\r\n          return a.floorOrder < b.floorOrder\r\n            ? -1\r\n            : a.floorOrder > b.floorOrder\r\n            ? 1\r\n            : 0;\r\n        });\r\n\r\n        for (let i = 0; i < allFloorList.length; i++) {\r\n          this.floorIdList.push(allFloorList[i].floorId);\r\n        }\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n      return allFloorList;\r\n    },\r\n    async getLatestFloor() {\r\n      let latestFloor = null;\r\n      try {\r\n        let response = await axios.get(\r\n          \"http://\" +\r\n            HOST +\r\n            \":\" +\r\n            PORT_NUMBER +\r\n            \"/api/buildings/\" +\r\n            BUILDING_ID +\r\n            \"/floors/get-latest-floor\"\r\n        );\r\n        latestFloor = response.data;\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n      return latestFloor;\r\n    },\r\n    async getLatestFloorImage() {\r\n      let latestFloorImage = [];\r\n      if (this.latestFloor) {\r\n        let latestFloorId = this.latestFloor.floor_id;\r\n        if (latestFloorId != null) {\r\n          try {\r\n            let response = await axios.get(\r\n              \"http://\" +\r\n                HOST +\r\n                \":\" +\r\n                PORT_NUMBER +\r\n                \"/api/buildings/\" +\r\n                BUILDING_ID +\r\n                \"/floors/\" +\r\n                latestFloorId +\r\n                \"/images\"\r\n            );\r\n\r\n            let newImageObject = {};\r\n            newImageObject.url = response.config.url;\r\n            newImageObject.floorId = latestFloorId;\r\n\r\n            latestFloorImage.push(newImageObject);\r\n          } catch (error) {\r\n            console.log(error);\r\n          }\r\n        }\r\n      }\r\n      return latestFloorImage;\r\n    },\r\n    //나머지 층 이미지 가져오기\r\n    async getOtherFloorImageList() {\r\n      let otherFloorsImageList = [];\r\n      let responseList = null;\r\n      if (this.floorIdList.length > 0) {\r\n        try {\r\n          for (let i = 0; i < this.floorIdList.length - 1; i++) {\r\n            let response = await axios.get(\r\n              \"http://\" +\r\n                HOST +\r\n                \":\" +\r\n                PORT_NUMBER +\r\n                \"/api/buildings/\" +\r\n                BUILDING_ID +\r\n                \"/floors/\" +\r\n                this.floorIdList[i] +\r\n                \"/images\"\r\n            );\r\n\r\n            let newImageObject = {};\r\n            newImageObject.url = response.config.url;\r\n            newImageObject.floorId = this.floorIdList[i];\r\n            responseList = newImageObject;\r\n            otherFloorsImageList.push(responseList);\r\n          }\r\n        } catch (error) {\r\n          console.error(error);\r\n        }\r\n      }\r\n      return otherFloorsImageList;\r\n    },\r\n    //우선 최신 층의 자리만 가져옴\r\n    async getLatestFloorSeatList() {\r\n      let latestFloorSeatList = [];\r\n      if (this.latestFloor) {\r\n        let latestFloorId = this.latestFloor.floor_id;\r\n        try {\r\n          let response = await axios.get(\r\n            \"http://\" +\r\n              HOST +\r\n              \":\" +\r\n              PORT_NUMBER +\r\n              \"/api/buildings/\" +\r\n              BUILDING_ID +\r\n              \"/floors/\" +\r\n              latestFloorId +\r\n              \"/seats\"\r\n          );\r\n          for (var i = 0; i < response.data.length; i++) {\r\n            let newSeatObject = {};\r\n\r\n            newSeatObject.seatId = response.data[i].seat_id;\r\n            newSeatObject.seatName = response.data[i].seat_name;\r\n            newSeatObject.floorId = response.data[i].floor;\r\n            newSeatObject.x = response.data[i].x;\r\n            newSeatObject.y = response.data[i].y;\r\n            newSeatObject.isGroup = response.data[i].is_group;\r\n            newSeatObject.buildingId = response.data[i].building_id;\r\n            newSeatObject.employeeId = response.data[i].employee_id;\r\n            newSeatObject.width = response.data[i].width;\r\n            newSeatObject.height = response.data[i].height;\r\n            newSeatObject.degree = response.data[i].degree;\r\n            newSeatObject.shapeId = response.data[i].shape_id;\r\n            newSeatObject.create = false;\r\n            newSeatObject.delete = false;\r\n            newSeatObject.modify = false;\r\n\r\n            latestFloorSeatList.push(newSeatObject);\r\n          }\r\n        } catch (error) {\r\n          console.log(error);\r\n        }\r\n      }\r\n      return latestFloorSeatList;\r\n    },\r\n    //최신 층을 제외한 다른 층의 자리들을 가져와서 백그라운드 리스트에 가지고 있기\r\n    async getOtherFloorsSeatMap() {\r\n      let otherFloorsSeatMap = new Map();\r\n      try {\r\n        for (let i = 0; i < this.floorIdList.length - 1; i++) {\r\n          let response = await axios.get(\r\n            \"http://\" +\r\n              HOST +\r\n              \":\" +\r\n              PORT_NUMBER +\r\n              \"/api/buildings/\" +\r\n              BUILDING_ID +\r\n              \"/floors/\" +\r\n              this.floorIdList[i] +\r\n              \"/seats\"\r\n          );\r\n          let responseList = [];\r\n          // 그 층에 자리가 없다면\r\n          //console.log(typeof response.data.length) //number\r\n          //console.log(typeof 0) //number\r\n          if (response.data.length === 0) { //number\r\n            otherFloorsSeatMap.set(this.floorIdList[i], []);\r\n          } else {\r\n            for (let j = 0; j < response.data.length; j++) {\r\n              // 자리 수 만큼 돈다\r\n              let newSeatObject = {};\r\n              newSeatObject.seatId = response.data[j].seat_id;\r\n              newSeatObject.seatName = response.data[j].seat_name;\r\n              newSeatObject.floorId = response.data[j].floor;\r\n              newSeatObject.x = response.data[j].x;\r\n              newSeatObject.y = response.data[j].y;\r\n              newSeatObject.isGroup = response.data[j].is_group;\r\n              newSeatObject.buildingId = response.data[j].building_id;\r\n              newSeatObject.employeeId = response.data[j].employee_id;\r\n              newSeatObject.width = response.data[j].width;\r\n              newSeatObject.height = response.data[j].height;\r\n              newSeatObject.degree = response.data[j].degree;\r\n              newSeatObject.shapeId = response.data[j].shape_id;\r\n              newSeatObject.create = false;\r\n              newSeatObject.delete = false;\r\n              newSeatObject.modify = false;\r\n\r\n              responseList.push(newSeatObject);\r\n\r\n              //console.log(typeof this.floorIdList[i]); //String\r\n              //console.log(typeof response.data[j].floor) //String\r\n              if (this.floorIdList[i] === response.data[j].floor) { //String\r\n                otherFloorsSeatMap.set(this.floorIdList[i], responseList);\r\n              }\r\n            }\r\n          }\r\n        }\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n      return otherFloorsSeatMap;\r\n    },\r\n    saveFloors(tableName, data) {\r\n      let saveData = data;\r\n      let saveTableName = tableName;\r\n\r\n      try {\r\n        axios.post(\r\n          \"http://\" +\r\n            HOST +\r\n            \":\" +\r\n            PORT_NUMBER +\r\n            \"/api/buildings/\" +\r\n            BUILDING_ID +\r\n            \"/\" +\r\n            saveTableName,\r\n          JSON.stringify(saveData),\r\n          {\r\n            headers: { \"Content-Type\": `application/json` },\r\n          }\r\n        );\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    },\r\n    saveImages(tableName, data, floorId) {\r\n      let saveData = data;\r\n      let saveTableName = tableName;\r\n\r\n      try {\r\n        axios.post(\r\n          \"http://\" +\r\n            HOST +\r\n            \":\" +\r\n            PORT_NUMBER +\r\n            \"/api/buildings/\" +\r\n            BUILDING_ID +\r\n            \"/floors/\" +\r\n            floorId +\r\n            \"/\" +\r\n            tableName,\r\n          saveData,\r\n          {\r\n            headers: {\r\n              \"Content-Type\": \"multipart/form-data\",\r\n            },\r\n          }\r\n        );\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    },\r\n    saveSeats(tableName, data, floorId) {\r\n      let saveData = data;\r\n      let saveTableName = tableName;\r\n      try {\r\n        axios.post(\r\n          \"http://\" +\r\n            HOST +\r\n            \":\" +\r\n            PORT_NUMBER +\r\n            \"/api/buildings/\" +\r\n            BUILDING_ID +\r\n            \"/floors/\" +\r\n            floorId +\r\n            \"/\" +\r\n            saveTableName,\r\n          JSON.stringify(saveData),\r\n          {\r\n            headers: { \"Content-Type\": `application/json` },\r\n          }\r\n        );\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    },\r\n    deleteFloorWtihKey(tableName, key) {\r\n      let deleteTableName = tableName;\r\n      let deleteKey = key;\r\n      try {\r\n        axios.delete(\r\n          \"http://\" +\r\n            HOST +\r\n            \":\" +\r\n            PORT_NUMBER +\r\n            \"/api/buildings/\" +\r\n            BUILDING_ID +\r\n            \"/\" +\r\n            deleteTableName +\r\n            \"/\" +\r\n            deleteKey\r\n        );\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    },\r\n    deleteSeatWithKey(tableName, seatId, floorId) {\r\n      let deleteTableName = tableName;\r\n      let deleteKey = seatId;\r\n      try {\r\n        axios.delete(\r\n          \"http://\" +\r\n            HOST +\r\n            \":\" +\r\n            PORT_NUMBER +\r\n            \"/api/buildings/\" +\r\n            BUILDING_ID +\r\n            \"/floors/\" +\r\n            floorId +\r\n            \"/\" +\r\n            deleteTableName +\r\n            \"/\" +\r\n            deleteKey\r\n        );\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    },\r\n\r\n    //get CSV File from DB and download CSV file\r\n    async downloadCSVFile(floorId) {\r\n      try {\r\n        let response = await axios.get(\r\n          \"http://\" +\r\n            HOST +\r\n            \":\" +\r\n            PORT_NUMBER +\r\n            \"/api/buildings/\" +\r\n            BUILDING_ID +\r\n            \"/floors/\" +\r\n            floorId +\r\n            \"/seats/get-csv-file-allfloor-seats\",\r\n          {\r\n            headers: {\r\n              \"Content-Type\": \"text/csv\",\r\n            },\r\n          }\r\n        );\r\n\r\n        let url = window.URL.createObjectURL(new Blob([response.data]));\r\n        let link = document.createElement(\"a\");\r\n        let contentDisposition = response.headers[\"content-disposition\"]; // 파일 이름 //cors\r\n\r\n        let filename = null;\r\n        if (contentDisposition) {\r\n          let [fileNameMatch] = contentDisposition\r\n            .split(\";\")\r\n            .filter((str) => str.includes(\"filename\"));\r\n          if (fileNameMatch) [, filename] = fileNameMatch.split(\"=\");\r\n        }\r\n        link.href = url;\r\n        link.setAttribute(\"download\", `${filename}`);\r\n        link.style.cssText = \"display:none\";\r\n        document.body.appendChild(link);\r\n        link.click();\r\n        link.remove();\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    },\r\n\r\n    //save information from CSV to DB\r\n    saveFromCSVFileToDB(saveData, floorId) {\r\n      axios\r\n        .post(\r\n          \"http://\" +\r\n            HOST +\r\n            \":\" +\r\n            PORT_NUMBER +\r\n            \"/api/buildings/\" +\r\n            BUILDING_ID +\r\n            \"/floors/\" +\r\n            floorId +\r\n            \"/seats/update-by-file\",\r\n          saveData,\r\n          {\r\n            headers: {\r\n              \"Content-Type\": \"multipart/form-data\",\r\n            },\r\n          }\r\n        )\r\n        .then(function (response) {\r\n          console.log(response);\r\n        })\r\n        .catch(function (error) {\r\n          console.log(error);\r\n        });\r\n    },\r\n  },\r\n};\r\n</script>\r\n\n\n\n// WEBPACK FOOTER //\n// src/views/Hanzari.vue","var normalizeComponent = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./Tabs.vue\"\nimport __vue_script__ from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./Tabs.vue\"\n/* template */\nimport __vue_template__ from \"!!../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-150fa57b\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../node_modules/vue-loader/lib/selector?type=template&index=0!./Tabs.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = null\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/Tabs.vue\n// module id = null\n// module chunks = ","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('v-app',{attrs:{\"id\":\"app\"}},[_c('div',{staticClass:\"hanzari\",attrs:{\"id\":\"hanzari\"}},[_c('v-app-bar',{attrs:{\"app\":\"\",\"dark\":\"\"}},[_c('v-toolbar',{attrs:{\"color\":\"black\",\"dark\":\"\"}},[_c('v-spacer',[_c('v-toolbar-items',[(_vm.drawer)?_c('v-icon',{attrs:{\"large\":\"\",\"dark\":\"\"},on:{\"click\":function($event){_vm.drawer = !_vm.drawer}}},[_vm._v(\"keyboard_arrow_left\")]):_vm._e(),_vm._v(\" \"),(!_vm.drawer)?_c('v-icon',{attrs:{\"large\":\"\",\"dark\":\"\"},on:{\"click\":function($event){_vm.drawer = !_vm.drawer}}},[_vm._v(\"keyboard_arrow_right\")]):_vm._e()],1)],1),_vm._v(\" \"),_c('v-toolbar-title',[_vm._v(\"한자리\")])],1)],1),_vm._v(\" \"),_c('v-navigation-drawer',{attrs:{\"app\":\"\",\"width\":500},model:{value:(_vm.drawer),callback:function ($$v) {_vm.drawer=$$v},expression:\"drawer\"}},[(\n          _vm.employeeList &&\n          _vm.floorList &&\n          _vm.latestFloorImage &&\n          _vm.otherFloorsImageList\n        )?_c('Tabs',{attrs:{\"copyEmployeeList\":_vm.employeeList,\"copyFloorList\":_vm.floorList,\"copyLatestFloorImage\":_vm.latestFloorImage,\"copyOtherFloorsImageList\":_vm.otherFloorsImageList}}):_vm._e()],1),_vm._v(\" \"),_c('v-main',[(\n          _vm.employeeList &&\n          _vm.floorList &&\n          _vm.latestFloorImage &&\n          _vm.latestFloorSeatList &&\n          _vm.otherFloorsImageList &&\n          _vm.otherFloorsSeatMap\n        )?_c('AssignSeats',{attrs:{\"copyEmployeeList\":_vm.employeeList,\"copyFloorList\":_vm.floorList,\"copyLatestFloorImage\":_vm.latestFloorImage,\"copyOtherFloorsImageList\":_vm.otherFloorsImageList,\"copyLatestFloorSeatList\":_vm.latestFloorSeatList,\"copyOtherFloorsSeatMap\":_vm.otherFloorsSeatMap},on:{\"saveImages\":_vm.saveImages,\"saveFloors\":_vm.saveFloors,\"saveSeats\":_vm.saveSeats,\"deleteFloorWithKey\":_vm.deleteFloorWtihKey,\"deleteSeatWithKey\":_vm.deleteSeatWithKey,\"downloadCSVFile\":_vm.downloadCSVFile,\"saveFromCSVFileToDB\":_vm.saveFromCSVFileToDB}}):_vm._e()],1)],1)])}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-d77052a0\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/views/Hanzari.vue\n// module id = null\n// module chunks = ","var normalizeComponent = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./Hanzari.vue\"\nimport __vue_script__ from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./Hanzari.vue\"\n/* template */\nimport __vue_template__ from \"!!../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-d77052a0\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../node_modules/vue-loader/lib/selector?type=template&index=0!./Hanzari.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = null\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/Hanzari.vue\n// module id = null\n// module chunks = ","<template>\r\n  <!-- <router-view /> -->\r\n  <Hanzari />\r\n</template>\r\n\r\n<script>\r\nimport { eventBus } from \"./main.js\";\r\nimport axios from \"axios\";\r\nimport Hanzari from \"@/views/Hanzari.vue\";\r\n\r\nexport default {\r\n  name: \"App\",\r\n  components: {\r\n    Hanzari,\r\n  },\r\n};\r\n</script>\r\n\n\n\n// WEBPACK FOOTER //\n// src/App.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('Hanzari')}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-cc146138\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/App.vue\n// module id = null\n// module chunks = ","var normalizeComponent = require(\"!../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../node_modules/vue-loader/lib/selector?type=script&index=0!./App.vue\"\nimport __vue_script__ from \"!!babel-loader!../node_modules/vue-loader/lib/selector?type=script&index=0!./App.vue\"\n/* template */\nimport __vue_template__ from \"!!../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-cc146138\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../node_modules/vue-loader/lib/selector?type=template&index=0!./App.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = null\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/App.vue\n// module id = null\n// module chunks = ","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('v-app',{attrs:{\"id\":\"app\"}},[_c('v-app-bar',{attrs:{\"app\":\"\",\"dark\":\"\"}},[_c('v-toolbar',{attrs:{\"color\":\"black\",\"dark\":\"\"}},[_c('v-spacer'),_vm._v(\" \"),_c('v-toolbar-title',[_vm._v(\"Hanzari Login\")])],1)],1),_vm._v(\" \"),_c('v-main',[_c('v-container',{staticClass:\"text-xs-center\",staticStyle:{\"position\":\"relative\",\"top\":\"20%\"}},[_c('v-layout',{staticClass:\"text-xs-center\",attrs:{\"row\":\"\",\"wrap\":\"\"}},[_c('v-flex',[_c('v-card',{staticClass:\"mx-auto\",attrs:{\"flat\":\"\",\"max-width\":\"800\"}},[_c('v-card-title',{attrs:{\"primary-title\":\"\"}},[_c('h4',[_vm._v(\"Login\")])]),_vm._v(\" \"),_c('v-form',[_c('v-text-field',{attrs:{\"prepend-icon\":\"person\",\"name\":\"Employee ID\",\"label\":\"Employee ID\"}}),_vm._v(\" \"),_c('v-text-field',{attrs:{\"prepend-icon\":\"lock\",\"name\":\"Password\",\"label\":\"Password\",\"type\":\"password\"}}),_vm._v(\" \"),_c('v-card-actions',[_c('v-btn',{attrs:{\"primary\":\"\",\"large\":\"\",\"block\":\"\"}},[_vm._v(\"Login\")])],1)],1)],1)],1)],1)],1)],1)],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-eb7b9e84\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/views/Login.vue\n// module id = null\n// module chunks = ","var normalizeComponent = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./Login.vue\"\nimport __vue_script__ from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./Login.vue\"\n/* template */\nimport __vue_template__ from \"!!../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-eb7b9e84\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../node_modules/vue-loader/lib/selector?type=template&index=0!./Login.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = null\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/Login.vue\n// module id = null\n// module chunks = ","import Vue from 'vue'\r\nimport Router from 'vue-router'\r\nimport fabric from 'fabric'\r\n\r\nimport Hanzari from '@/views/Hanzari'\r\nimport Login from '@/views/Login'\r\n\r\nVue.use(Router)\r\nVue.use(fabric)\r\n\r\nexport default new Router({\r\n  mode: 'history',\r\n  routes: [\r\n    {\r\n      path: '/',\r\n      name: 'login',\r\n      component: Login\r\n    },\r\n    {\r\n      path: '/Hanzari',\r\n      name: 'Hanzari',\r\n      component: Hanzari\r\n    }\r\n  ]\r\n})\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/router/index.js","// The Vue build version to load with the `import` command\r\n// (runtime-only or standalone) has been set in webpack.base.conf with an alias.\r\nimport Vue from 'vue'\r\nimport App from './App'\r\nimport router from './router'\r\nimport Vuetify from 'vuetify'\r\nimport 'vuetify/dist/vuetify.min.css'\r\nimport vSelectMenu from 'v-selectmenu'\r\n\r\nimport axios from 'axios' // we can use this.$axios without using 'import' in vue instance\r\n\r\nexport const eventBus = new Vue()\r\n\r\nVue.prototype.$axios = axios\r\n\r\nVue.use(Vuetify, {\r\n  iconfont: 'mdi' // 'md' || 'mdi' || 'fa' || 'fa4'\r\n})\r\nVue.use(vSelectMenu)\r\n\r\n/* eslint-disable no-new */\r\nnew Vue({\r\n  el: '#app',\r\n  router,\r\n  components: { App },\r\n  template: '<App/>',\r\n  vuetify: new Vuetify()\r\n})\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.js"],"sourceRoot":""}